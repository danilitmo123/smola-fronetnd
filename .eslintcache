[{"D:\\smola-frontend\\src\\index.js":"1","D:\\smola-frontend\\src\\reportWebVitals.js":"2","D:\\smola-frontend\\src\\store.js":"3","D:\\smola-frontend\\src\\App.js":"4","D:\\smola-frontend\\src\\reducers\\price-reducers.js":"5","D:\\smola-frontend\\src\\reducers\\resource-create-reducers.js":"6","D:\\smola-frontend\\src\\reducers\\specification-create-reducers.js":"7","D:\\smola-frontend\\src\\reducers\\resource-upload-reducers.js":"8","D:\\smola-frontend\\src\\reducers\\order-list-reducers.js":"9","D:\\smola-frontend\\src\\reducers\\specification-reducers.js":"10","D:\\smola-frontend\\src\\reducers\\resources-in-spec-reducers.js":"11","D:\\smola-frontend\\src\\reducers\\remove-specifications-reducers.js":"12","D:\\smola-frontend\\src\\reducers\\remove-resources-reducers.js":"13","D:\\smola-frontend\\src\\reducers\\specification-shortlist-reducers.js":"14","D:\\smola-frontend\\src\\reducers\\resource-shortlist-reducers.js":"15","D:\\smola-frontend\\src\\reducers\\order-deatail-reducers.js":"16","D:\\smola-frontend\\src\\reducers\\order-create-reducers.js":"17","D:\\smola-frontend\\src\\reducers\\profile-reducers.js":"18","D:\\smola-frontend\\src\\reducers\\profile-admin-list-reducers.js":"19","D:\\smola-frontend\\src\\reducers\\auth.js":"20","D:\\smola-frontend\\src\\reducers\\profile-create-reducers.js":"21","D:\\smola-frontend\\src\\reducers\\profile-edit.js":"22","D:\\smola-frontend\\src\\reducers\\profile-change-password.js":"23","D:\\smola-frontend\\src\\reducers\\product-reducers.js":"24","D:\\smola-frontend\\src\\reducers\\search-reducers.js":"25","D:\\smola-frontend\\src\\reducers\\filter-reducres.js":"26","D:\\smola-frontend\\src\\reducers\\switch-page-reducers.js":"27","D:\\smola-frontend\\src\\reducers\\check-auth-reducers.js":"28","D:\\smola-frontend\\src\\constants\\deafult-pages.js":"29","D:\\smola-frontend\\src\\actions\\check-auth-actions.js":"30","D:\\smola-frontend\\src\\frames\\mian-frame\\index.js":"31","D:\\smola-frontend\\src\\constants\\resource-create-constants.js":"32","D:\\smola-frontend\\src\\constants\\resource-upload-constants.js":"33","D:\\smola-frontend\\src\\constants\\price-constants.js":"34","D:\\smola-frontend\\src\\constants\\specification-create-constants.js":"35","D:\\smola-frontend\\src\\constants\\order-list-constants.js":"36","D:\\smola-frontend\\src\\constants\\specification-constans.js":"37","D:\\smola-frontend\\src\\constants\\remove-specification-constants.js":"38","D:\\smola-frontend\\src\\constants\\resources-in-spec-constants.js":"39","D:\\smola-frontend\\src\\constants\\resource-shortlist.js":"40","D:\\smola-frontend\\src\\constants\\order-deatil-consts.js":"41","D:\\smola-frontend\\src\\constants\\profile-adimin-list-constatns.js":"42","D:\\smola-frontend\\src\\constants\\remove-resource-constants.js":"43","D:\\smola-frontend\\src\\constants\\profile-constatnts.js":"44","D:\\smola-frontend\\src\\constants\\auth-constatants.js":"45","D:\\smola-frontend\\src\\reducers\\initialState.js":"46","D:\\smola-frontend\\src\\constants\\profile-create-constants.js":"47","D:\\smola-frontend\\src\\constants\\profile-edit.js":"48","D:\\smola-frontend\\src\\constants\\profile-change-password.js":"49","D:\\smola-frontend\\src\\constants\\product-constans.js":"50","D:\\smola-frontend\\src\\components\\spinner\\index.js":"51","D:\\smola-frontend\\src\\constants\\search-constatants.js":"52","D:\\smola-frontend\\src\\constants\\filter-constants.js":"53","D:\\smola-frontend\\src\\constants\\switch-page-constants.js":"54","D:\\smola-frontend\\src\\constants\\order-create-constants.js":"55","D:\\smola-frontend\\src\\constants\\specification-shortlist-constants.js":"56","D:\\smola-frontend\\src\\frames\\default-frame\\index.js":"57","D:\\smola-frontend\\src\\constants\\check-authorization-constants.js":"58","D:\\smola-frontend\\src\\components\\api\\axiosApi.js":"59","D:\\smola-frontend\\src\\components\\side-bar\\index.js":"60","D:\\smola-frontend\\src\\components\\header\\index.js":"61","D:\\smola-frontend\\src\\screens\\profile-screen\\index.js":"62","D:\\smola-frontend\\src\\components\\server-error-page\\index.js":"63","D:\\smola-frontend\\src\\screens\\login-screen\\index.js":"64","D:\\smola-frontend\\src\\components\\network-error-page\\index.js":"65","D:\\smola-frontend\\src\\screens\\main-screen\\index.js":"66","D:\\smola-frontend\\src\\components\\unexpected-error-page\\index.js":"67","D:\\smola-frontend\\src\\screens\\specification-screen\\index.js":"68","D:\\smola-frontend\\src\\screens\\order-screen\\index.js":"69","D:\\smola-frontend\\src\\screens\\resource-screen\\index.js":"70","D:\\smola-frontend\\src\\actions\\switch-page-actions.js":"71","D:\\smola-frontend\\src\\actions\\product-actions.js":"72","D:\\smola-frontend\\src\\actions\\order-list-actions.js":"73","D:\\smola-frontend\\src\\actions\\auth-actions.js":"74","D:\\smola-frontend\\src\\actions\\specification-actions.js":"75","D:\\smola-frontend\\src\\components\\upload-resource-modal\\index.js":"76","D:\\smola-frontend\\src\\components\\error-message\\index.js":"77","D:\\smola-frontend\\src\\components\\order-card\\index.js":"78","D:\\smola-frontend\\src\\components\\filter-modal\\index.js":"79","D:\\smola-frontend\\src\\components\\specification-item\\index.js":"80","D:\\smola-frontend\\src\\components\\order-item\\index.js":"81","D:\\smola-frontend\\src\\screens\\profile-screen\\profile-info\\index.js":"82","D:\\smola-frontend\\src\\components\\create-resource-modal\\index.js":"83","D:\\smola-frontend\\src\\components\\create-order-modal\\index.js":"84","D:\\smola-frontend\\src\\components\\specification-card\\index.js":"85","D:\\smola-frontend\\src\\screens\\profile-screen\\change-password\\index.js":"86","D:\\smola-frontend\\src\\components\\create-specification-modal\\index.js":"87","D:\\smola-frontend\\src\\components\\product-item\\index.js":"88","D:\\smola-frontend\\src\\components\\api\\authenticationApi.js":"89","D:\\smola-frontend\\src\\actions\\resource-upload-actions.js":"90","D:\\smola-frontend\\src\\actions\\profile-actions.js":"91","D:\\smola-frontend\\src\\actions\\order-create-actions.js":"92","D:\\smola-frontend\\src\\actions\\specification-shortlist-actions.js":"93","D:\\smola-frontend\\src\\actions\\remove-specifications-actions.js":"94","D:\\smola-frontend\\src\\actions\\profile-edit.js":"95","D:\\smola-frontend\\src\\actions\\price-actions.js":"96","D:\\smola-frontend\\src\\actions\\resource-shortlist-actions.js":"97","D:\\smola-frontend\\src\\actions\\profile-change-password.js":"98","D:\\smola-frontend\\src\\actions\\remove-resources-actions.js":"99","D:\\smola-frontend\\src\\components\\specification-card-item\\card-item.js":"100","D:\\smola-frontend\\src\\components\\order-card-specification-item\\index.js":"101","D:\\smola-frontend\\src\\components\\order-card-pruducts-item\\index.js":"102","D:\\smola-frontend\\src\\components\\create-order-modal\\order-product\\index.js":"103","D:\\smola-frontend\\src\\screens\\profile-screen\\admin-panel\\index.js":"104","D:\\smola-frontend\\src\\components\\create-specification-modal\\specification-resource\\index.js":"105","D:\\smola-frontend\\src\\components\\amount-specification-modal\\index.js":"106","D:\\smola-frontend\\src\\components\\collect-resource-modal\\index.js":"107","D:\\smola-frontend\\src\\components\\order-card-specification-item\\specification-item\\index.js":"108","D:\\smola-frontend\\src\\screens\\profile-screen\\admin-panel\\list-user\\index.js":"109","D:\\smola-frontend\\src\\screens\\profile-screen\\admin-panel\\create-user\\index.js":"110","D:\\smola-frontend\\src\\actions\\profile-admin-list.js":"111","D:\\smola-frontend\\src\\actions\\profile-create-actions.js":"112","D:\\smola-frontend\\src\\screens\\profile-screen\\admin-panel\\list-user\\card.js":"113"},{"size":652,"mtime":1614173355070,"results":"114","hashOfConfig":"115"},{"size":362,"mtime":1612770399467,"results":"116","hashOfConfig":"115"},{"size":3183,"mtime":1615576502698,"results":"117","hashOfConfig":"115"},{"size":1467,"mtime":1614353945147,"results":"118","hashOfConfig":"115"},{"size":470,"mtime":1612770403617,"results":"119","hashOfConfig":"115"},{"size":558,"mtime":1612770403739,"results":"120","hashOfConfig":"115"},{"size":762,"mtime":1614668956930,"results":"121","hashOfConfig":"115"},{"size":569,"mtime":1612770403855,"results":"122","hashOfConfig":"115"},{"size":533,"mtime":1612770403577,"results":"123","hashOfConfig":"115"},{"size":616,"mtime":1612770404120,"results":"124","hashOfConfig":"115"},{"size":663,"mtime":1612894845683,"results":"125","hashOfConfig":"115"},{"size":563,"mtime":1613411390952,"results":"126","hashOfConfig":"115"},{"size":568,"mtime":1613415341863,"results":"127","hashOfConfig":"115"},{"size":700,"mtime":1614668956931,"results":"128","hashOfConfig":"115"},{"size":639,"mtime":1614173355140,"results":"129","hashOfConfig":"115"},{"size":565,"mtime":1614173355109,"results":"130","hashOfConfig":"115"},{"size":548,"mtime":1614173355105,"results":"131","hashOfConfig":"115"},{"size":537,"mtime":1614173355125,"results":"132","hashOfConfig":"115"},{"size":647,"mtime":1614173355110,"results":"133","hashOfConfig":"115"},{"size":401,"mtime":1613915874181,"results":"134","hashOfConfig":"115"},{"size":566,"mtime":1614173355112,"results":"135","hashOfConfig":"115"},{"size":540,"mtime":1614173355125,"results":"136","hashOfConfig":"115"},{"size":628,"mtime":1614173355111,"results":"137","hashOfConfig":"115"},{"size":574,"mtime":1612982686385,"results":"138","hashOfConfig":"115"},{"size":513,"mtime":1614668956928,"results":"139","hashOfConfig":"115"},{"size":511,"mtime":1614761601273,"results":"140","hashOfConfig":"115"},{"size":1117,"mtime":1614353945151,"results":"141","hashOfConfig":"115"},{"size":733,"mtime":1614173355074,"results":"142","hashOfConfig":"115"},{"size":327,"mtime":1614173355045,"results":"143","hashOfConfig":"115"},{"size":1040,"mtime":1614173354945,"results":"144","hashOfConfig":"115"},{"size":1177,"mtime":1614668956926,"results":"145","hashOfConfig":"115"},{"size":194,"mtime":1612770401967,"results":"146","hashOfConfig":"115"},{"size":194,"mtime":1612770402126,"results":"147","hashOfConfig":"115"},{"size":128,"mtime":1612770401797,"results":"148","hashOfConfig":"115"},{"size":302,"mtime":1614668956925,"results":"149","hashOfConfig":"115"},{"size":164,"mtime":1612770401717,"results":"150","hashOfConfig":"115"},{"size":188,"mtime":1612770402208,"results":"151","hashOfConfig":"115"},{"size":220,"mtime":1613411391025,"results":"152","hashOfConfig":"115"},{"size":262,"mtime":1612894845656,"results":"153","hashOfConfig":"115"},{"size":212,"mtime":1612770402046,"results":"154","hashOfConfig":"115"},{"size":178,"mtime":1613915874168,"results":"155","hashOfConfig":"115"},{"size":211,"mtime":1614173355046,"results":"156","hashOfConfig":"115"},{"size":190,"mtime":1612984418121,"results":"157","hashOfConfig":"115"},{"size":145,"mtime":1614173355048,"results":"158","hashOfConfig":"115"},{"size":98,"mtime":1613915874164,"results":"159","hashOfConfig":"115"},{"size":76,"mtime":1613915874184,"results":"160","hashOfConfig":"115"},{"size":187,"mtime":1614173355049,"results":"161","hashOfConfig":"115"},{"size":175,"mtime":1614173355049,"results":"162","hashOfConfig":"115"},{"size":241,"mtime":1614173355047,"results":"163","hashOfConfig":"115"},{"size":217,"mtime":1612982356490,"results":"164","hashOfConfig":"115"},{"size":370,"mtime":1615820216302,"results":"165","hashOfConfig":"115"},{"size":167,"mtime":1614668956923,"results":"166","hashOfConfig":"115"},{"size":165,"mtime":1614761601272,"results":"167","hashOfConfig":"115"},{"size":325,"mtime":1614353945150,"results":"168","hashOfConfig":"115"},{"size":178,"mtime":1613915874165,"results":"169","hashOfConfig":"115"},{"size":244,"mtime":1613915874172,"results":"170","hashOfConfig":"115"},{"size":867,"mtime":1614673404060,"results":"171","hashOfConfig":"115"},{"size":304,"mtime":1614173355043,"results":"172","hashOfConfig":"115"},{"size":3675,"mtime":1615820997406,"results":"173","hashOfConfig":"115"},{"size":4062,"mtime":1614765379379,"results":"174","hashOfConfig":"115"},{"size":5234,"mtime":1615573892327,"results":"175","hashOfConfig":"115"},{"size":553,"mtime":1614668956939,"results":"176","hashOfConfig":"115"},{"size":468,"mtime":1614672149433,"results":"177","hashOfConfig":"115"},{"size":2138,"mtime":1614173355142,"results":"178","hashOfConfig":"115"},{"size":465,"mtime":1614673134205,"results":"179","hashOfConfig":"115"},{"size":2359,"mtime":1614761601276,"results":"180","hashOfConfig":"115"},{"size":490,"mtime":1614673433523,"results":"181","hashOfConfig":"115"},{"size":3147,"mtime":1615653951090,"results":"182","hashOfConfig":"115"},{"size":2418,"mtime":1615740782689,"results":"183","hashOfConfig":"115"},{"size":2015,"mtime":1615822831972,"results":"184","hashOfConfig":"115"},{"size":758,"mtime":1614353945148,"results":"185","hashOfConfig":"115"},{"size":1299,"mtime":1614761601235,"results":"186","hashOfConfig":"115"},{"size":1291,"mtime":1614761601233,"results":"187","hashOfConfig":"115"},{"size":775,"mtime":1614173354944,"results":"188","hashOfConfig":"115"},{"size":1413,"mtime":1614761601237,"results":"189","hashOfConfig":"115"},{"size":1467,"mtime":1613915874162,"results":"190","hashOfConfig":"115"},{"size":265,"mtime":1612770400725,"results":"191","hashOfConfig":"115"},{"size":4935,"mtime":1615828179452,"results":"192","hashOfConfig":"115"},{"size":13138,"mtime":1615820306759,"results":"193","hashOfConfig":"115"},{"size":3595,"mtime":1615828357682,"results":"194","hashOfConfig":"115"},{"size":2040,"mtime":1614761601261,"results":"195","hashOfConfig":"115"},{"size":3321,"mtime":1614350560278,"results":"196","hashOfConfig":"115"},{"size":5234,"mtime":1615728220489,"results":"197","hashOfConfig":"115"},{"size":5775,"mtime":1615820216478,"results":"198","hashOfConfig":"115"},{"size":6472,"mtime":1615831669880,"results":"199","hashOfConfig":"115"},{"size":2826,"mtime":1614668956938,"results":"200","hashOfConfig":"115"},{"size":8829,"mtime":1615820997160,"results":"201","hashOfConfig":"115"},{"size":3402,"mtime":1615824565539,"results":"202","hashOfConfig":"115"},{"size":829,"mtime":1613915874104,"results":"203","hashOfConfig":"115"},{"size":949,"mtime":1614173355014,"results":"204","hashOfConfig":"115"},{"size":696,"mtime":1614173354997,"results":"205","hashOfConfig":"115"},{"size":933,"mtime":1613915873991,"results":"206","hashOfConfig":"115"},{"size":813,"mtime":1614173355019,"results":"207","hashOfConfig":"115"},{"size":765,"mtime":1614173355011,"results":"208","hashOfConfig":"115"},{"size":957,"mtime":1614173355003,"results":"209","hashOfConfig":"115"},{"size":742,"mtime":1614173354993,"results":"210","hashOfConfig":"115"},{"size":759,"mtime":1614173355012,"results":"211","hashOfConfig":"115"},{"size":902,"mtime":1614173355002,"results":"212","hashOfConfig":"115"},{"size":702,"mtime":1614352460841,"results":"213","hashOfConfig":"115"},{"size":943,"mtime":1615829649256,"results":"214","hashOfConfig":"115"},{"size":795,"mtime":1615573892453,"results":"215","hashOfConfig":"115"},{"size":1645,"mtime":1615573892202,"results":"216","hashOfConfig":"115"},{"size":2573,"mtime":1614764352114,"results":"217","hashOfConfig":"115"},{"size":253,"mtime":1614173355149,"results":"218","hashOfConfig":"115"},{"size":2766,"mtime":1614764740240,"results":"219","hashOfConfig":"115"},{"size":2103,"mtime":1615733691385,"results":"220","hashOfConfig":"115"},{"size":4624,"mtime":1615730092415,"results":"221","hashOfConfig":"115"},{"size":1154,"mtime":1615822025993,"results":"222","hashOfConfig":"115"},{"size":1049,"mtime":1614173355153,"results":"223","hashOfConfig":"115"},{"size":2743,"mtime":1614670241175,"results":"224","hashOfConfig":"115"},{"size":784,"mtime":1614173355001,"results":"225","hashOfConfig":"115"},{"size":827,"mtime":1614173355003,"results":"226","hashOfConfig":"115"},{"size":1055,"mtime":1614350677629,"results":"227","hashOfConfig":"115"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},"1ffd5pq",{"filePath":"231","messages":"232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"237","usedDeprecatedRules":"230"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"256","messages":"257","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"262","messages":"263","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"264","messages":"265","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"266","messages":"267","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"268","messages":"269","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"270","messages":"271","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"272","messages":"273","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"274","messages":"275","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"276","messages":"277","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"278","usedDeprecatedRules":"230"},{"filePath":"279","messages":"280","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"281","messages":"282","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"283","messages":"284","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"285","messages":"286","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"287","messages":"288","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"289","messages":"290","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"291","messages":"292","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"293","usedDeprecatedRules":"230"},{"filePath":"294","messages":"295","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"296","messages":"297","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"298","messages":"299","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"300","messages":"301","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"302","messages":"303","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"304","messages":"305","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"306","messages":"307","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"308","messages":"309","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"310","messages":"311","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"312","messages":"313","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"314","messages":"315","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"316","messages":"317","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"318","messages":"319","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"320","messages":"321","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"322","messages":"323","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"324","usedDeprecatedRules":"230"},{"filePath":"325","messages":"326","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"327","messages":"328","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"329","messages":"330","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"331","messages":"332","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"333","messages":"334","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"335","messages":"336","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"337","messages":"338","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"339","messages":"340","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"341","messages":"342","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"343","messages":"344","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"345","messages":"346","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"347","messages":"348","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"349","messages":"350","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"351","messages":"352","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"353","usedDeprecatedRules":"230"},{"filePath":"354","messages":"355","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"356","usedDeprecatedRules":"230"},{"filePath":"357","messages":"358","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"359","messages":"360","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"361","messages":"362","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"363","messages":"364","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"365","messages":"366","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"367","messages":"368","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"369","messages":"370","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"371","messages":"372","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"373","usedDeprecatedRules":"230"},{"filePath":"374","messages":"375","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"376","usedDeprecatedRules":"230"},{"filePath":"377","messages":"378","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"379","messages":"380","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"381","messages":"382","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"383","messages":"384","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"385","messages":"386","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"387","messages":"388","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"389","usedDeprecatedRules":"230"},{"filePath":"390","messages":"391","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"392","messages":"393","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"394","usedDeprecatedRules":"230"},{"filePath":"395","messages":"396","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"397","usedDeprecatedRules":"230"},{"filePath":"398","messages":"399","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"400","messages":"401","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"402","usedDeprecatedRules":"230"},{"filePath":"403","messages":"404","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"405","usedDeprecatedRules":"230"},{"filePath":"406","messages":"407","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"408","usedDeprecatedRules":"230"},{"filePath":"409","messages":"410","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"411","usedDeprecatedRules":"230"},{"filePath":"412","messages":"413","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"414","messages":"415","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"416","usedDeprecatedRules":"230"},{"filePath":"417","messages":"418","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"419","messages":"420","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"421","usedDeprecatedRules":"230"},{"filePath":"422","messages":"423","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"424","messages":"425","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"426","messages":"427","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"428","messages":"429","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"430","messages":"431","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"432","messages":"433","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"434","messages":"435","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"436","messages":"437","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"438","messages":"439","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"440","messages":"441","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"442","messages":"443","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"444","messages":"445","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"446","usedDeprecatedRules":"230"},{"filePath":"447","messages":"448","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"449","usedDeprecatedRules":"230"},{"filePath":"450","messages":"451","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"452","usedDeprecatedRules":"230"},{"filePath":"453","messages":"454","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"455","usedDeprecatedRules":"230"},{"filePath":"456","messages":"457","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"458","messages":"459","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"460","usedDeprecatedRules":"230"},{"filePath":"461","messages":"462","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"463","usedDeprecatedRules":"230"},{"filePath":"464","messages":"465","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"466","usedDeprecatedRules":"230"},{"filePath":"467","messages":"468","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"469","usedDeprecatedRules":"230"},{"filePath":"470","messages":"471","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"472","usedDeprecatedRules":"230"},{"filePath":"473","messages":"474","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"475","usedDeprecatedRules":"230"},{"filePath":"476","messages":"477","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"478","messages":"479","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"480"},{"filePath":"481","messages":"482","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},"D:\\smola-frontend\\src\\index.js",[],["483","484"],"D:\\smola-frontend\\src\\reportWebVitals.js",[],"D:\\smola-frontend\\src\\store.js",[],"D:\\smola-frontend\\src\\App.js",["485","486","487"],"import React, {useEffect} from 'react'\r\n\r\nimport {BrowserRouter as Router, useHistory} from \"react-router-dom\";\r\nimport './App.css';\r\nimport * as PropTypes from \"prop-types\";\r\nimport {connect, useDispatch, useSelector} from \"react-redux\";\r\nimport {DEFAULT_PAGES} from \"./constants/deafult-pages\"\r\nimport Loader from \"./components/spinner\";\r\nimport * as pages from \"./constants/deafult-pages\"\r\nimport {authCheckAction} from \"./actions/check-auth-actions\"\r\nimport MainFrame from \"./frames/mian-frame\";\r\nimport DefaultFrame from \"./frames/default-frame\";\r\n\r\nfunction App({accessToken}) {\r\n\r\n    const dispatch = useDispatch()\r\n    const checkAuth = useSelector(state => state.checkAuth)\r\n    const {error, loading, data} = checkAuth\r\n    const history = useHistory()\r\n\r\n    useEffect(() => {\r\n        dispatch(authCheckAction(window.location.pathname))\r\n    }, [dispatch])\r\n\r\n    if (!Boolean(accessToken) && !DEFAULT_PAGES.includes(window.location.pathname)) {\r\n        window.location.href = pages.LOGIN_PAGE\r\n    }\r\n\r\n    return (\r\n        <Router>\r\n            {Boolean(accessToken) && !DEFAULT_PAGES.includes(window.location.pathname) ? (loading ? <Loader/> :\r\n                <MainFrame/>) : null}\r\n            <DefaultFrame/>\r\n        </Router>\r\n    );\r\n}\r\n\r\nApp.propTypes = {\r\n    accessToken: PropTypes.string,\r\n};\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        accessToken: state.auth,\r\n    };\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps)(App);","D:\\smola-frontend\\src\\reducers\\price-reducers.js",[],"D:\\smola-frontend\\src\\reducers\\resource-create-reducers.js",[],"D:\\smola-frontend\\src\\reducers\\specification-create-reducers.js",[],"D:\\smola-frontend\\src\\reducers\\resource-upload-reducers.js",[],"D:\\smola-frontend\\src\\reducers\\order-list-reducers.js",[],"D:\\smola-frontend\\src\\reducers\\specification-reducers.js",[],"D:\\smola-frontend\\src\\reducers\\resources-in-spec-reducers.js",[],"D:\\smola-frontend\\src\\reducers\\remove-specifications-reducers.js",[],"D:\\smola-frontend\\src\\reducers\\remove-resources-reducers.js",[],"D:\\smola-frontend\\src\\reducers\\specification-shortlist-reducers.js",[],"D:\\smola-frontend\\src\\reducers\\resource-shortlist-reducers.js",[],"D:\\smola-frontend\\src\\reducers\\order-deatail-reducers.js",[],"D:\\smola-frontend\\src\\reducers\\order-create-reducers.js",[],"D:\\smola-frontend\\src\\reducers\\profile-reducers.js",[],"D:\\smola-frontend\\src\\reducers\\profile-admin-list-reducers.js",[],"D:\\smola-frontend\\src\\reducers\\auth.js",[],"D:\\smola-frontend\\src\\reducers\\profile-create-reducers.js",[],"D:\\smola-frontend\\src\\reducers\\profile-edit.js",[],"D:\\smola-frontend\\src\\reducers\\profile-change-password.js",[],"D:\\smola-frontend\\src\\reducers\\product-reducers.js",["488"],"import {\n    PRODUCT_LIST_FAIL,\n    PRODUCT_LIST_REQUEST,\n    PRODUCT_LIST_SUCCESS,\n    REMOVE_PRODUCT\n} from \"../constants/product-constans\";\n\n\nexport const productListReducers = (state = {products: {}}, action) => {\n    switch (action.type) {\n        case PRODUCT_LIST_REQUEST:\n            return { loading: true, products: {}}\n        case PRODUCT_LIST_SUCCESS:\n            return { loading: false, products: {...action.payload}}\n        case PRODUCT_LIST_FAIL:\n            return { loading: false, error: action.payload}\n        default:\n            return state\n    }\n}","D:\\smola-frontend\\src\\reducers\\search-reducers.js",[],"D:\\smola-frontend\\src\\reducers\\filter-reducres.js",[],"D:\\smola-frontend\\src\\reducers\\switch-page-reducers.js",[],"D:\\smola-frontend\\src\\reducers\\check-auth-reducers.js",[],"D:\\smola-frontend\\src\\constants\\deafult-pages.js",[],"D:\\smola-frontend\\src\\actions\\check-auth-actions.js",[],"D:\\smola-frontend\\src\\frames\\mian-frame\\index.js",["489"],"import SideBar from \"../../components/side-bar\";\r\nimport Header from \"../../components/header\";\r\nimport {Route, Switch, useHistory} from \"react-router-dom\";\r\nimport SpecificationScreen from \"../../screens/specification-screen\";\r\nimport ResourceScreen from \"../../screens/resource-screen\";\r\nimport OrderScreen from \"../../screens/order-screen\";\r\nimport React from \"react\";\r\nimport ProfileScreen from \"../../screens/profile-screen\";\r\nimport MainScreen from \"../../screens/main-screen\";\r\n\r\n\r\nconst MainFrame = () => {\r\n\r\n    const history = useHistory()\r\n\r\n    return (\r\n        <div className={'App'}>\r\n            <SideBar/>\r\n            <Header/>\r\n            <Switch>\r\n                <Route exact path={'/'} component={MainScreen}/>\r\n                <Route path={'/profile'} component={ProfileScreen}/>\r\n                <Route path={'/specification/'} component={SpecificationScreen}/>\r\n                <Route path={'/resources/'} component={ResourceScreen}/>\r\n                <Route path={'/orders/'} component={OrderScreen}/>\r\n                <Route path={'/profile/'} component={ProfileScreen} />\r\n            </Switch>\r\n        </div>\r\n    )\r\n}\r\nexport default MainFrame;","D:\\smola-frontend\\src\\constants\\resource-create-constants.js",[],"D:\\smola-frontend\\src\\constants\\resource-upload-constants.js",[],"D:\\smola-frontend\\src\\constants\\price-constants.js",[],"D:\\smola-frontend\\src\\constants\\specification-create-constants.js",[],"D:\\smola-frontend\\src\\constants\\order-list-constants.js",[],"D:\\smola-frontend\\src\\constants\\specification-constans.js",[],"D:\\smola-frontend\\src\\constants\\remove-specification-constants.js",[],"D:\\smola-frontend\\src\\constants\\resources-in-spec-constants.js",[],"D:\\smola-frontend\\src\\constants\\resource-shortlist.js",[],"D:\\smola-frontend\\src\\constants\\order-deatil-consts.js",[],"D:\\smola-frontend\\src\\constants\\profile-adimin-list-constatns.js",[],"D:\\smola-frontend\\src\\constants\\remove-resource-constants.js",[],"D:\\smola-frontend\\src\\constants\\profile-constatnts.js",[],"D:\\smola-frontend\\src\\constants\\auth-constatants.js",[],"D:\\smola-frontend\\src\\reducers\\initialState.js",["490"],"export default {\r\n    accessToken: localStorage.getItem(\"access_token\"),\r\n};","D:\\smola-frontend\\src\\constants\\profile-create-constants.js",[],"D:\\smola-frontend\\src\\constants\\profile-edit.js",[],"D:\\smola-frontend\\src\\constants\\profile-change-password.js",[],"D:\\smola-frontend\\src\\constants\\product-constans.js",[],"D:\\smola-frontend\\src\\components\\spinner\\index.js",[],"D:\\smola-frontend\\src\\constants\\search-constatants.js",[],"D:\\smola-frontend\\src\\constants\\filter-constants.js",[],"D:\\smola-frontend\\src\\constants\\switch-page-constants.js",[],"D:\\smola-frontend\\src\\constants\\order-create-constants.js",[],"D:\\smola-frontend\\src\\constants\\specification-shortlist-constants.js",[],"D:\\smola-frontend\\src\\frames\\default-frame\\index.js",[],"D:\\smola-frontend\\src\\constants\\check-authorization-constants.js",[],"D:\\smola-frontend\\src\\components\\api\\axiosApi.js",[],"D:\\smola-frontend\\src\\components\\side-bar\\index.js",["491"],"import React from 'react'\r\nimport {Link} from \"react-router-dom\";\r\nimport logo from '../../images/avatar.svg'\r\nimport firstItem from '../../images/first-side-bar-item.svg'\r\nimport firstItemActive from '../../images/first-side-bar-active.svg'\r\nimport secondItem from '../../images/second-side-bar-item.svg'\r\nimport secondItemActive from '../../images/second-side-active.svg'\r\nimport thirdItem from '../../images/third-sibe-bar-item.svg'\r\nimport thirdItemActive from '../../images/third-side-bar-active.svg'\r\nimport mainPageIcon from '../../images/inbox-alt.svg'\r\nimport './side-bar.scss'\r\nimport {connect, useDispatch, useSelector} from \"react-redux\";\r\nimport * as PropTypes from \"prop-types\";\r\nimport * as action from \"../../actions/switch-page-actions\"\r\nimport {logoutUser} from \"../../actions/auth-actions\";\r\n\r\nconst SideBar = () => {\r\n\r\n    const switcher = useSelector(state => state.switchPage)\r\n    const {specificationPage, resourcePage, orderPage, mainPage, profilePage} = switcher\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    return (\r\n        <div className=\"side-bar\">\r\n            <div className=\"side-bar-logo\">Smola20.ru</div>\r\n            <Link to={'/profile'} onClick={e => dispatch(action.switchProfileAction())} className={'Link'}>\r\n                <div className=\"profile-logo\">\r\n                    <img src={logo} alt={'profile-logo'}/>\r\n                    <div className=\"user\">Профиль</div>\r\n                </div>\r\n            </Link>\r\n            <div className=\"side-nav-bar\">\r\n                <Link to={'/'} className={'link'}>\r\n                    <div className={'dashboard items'} onClick={e => dispatch(action.switchMainPageAction())}>\r\n                        <img src={mainPageIcon} alt=\"\"/>\r\n                        <div className={mainPage ? 'dashboard-text active' : 'dashboard-text'}>Главная</div>\r\n                    </div>\r\n                </Link>\r\n                <Link to={'/specification'} className={'link'}>\r\n                    <div className=\"dashboard items\" onClick={e => dispatch(action.switchSpecificationPageAction())}>\r\n                        {\r\n                            specificationPage ? <img src={firstItemActive} alt=\"dashboardActive\"/> :\r\n                                <img src={firstItem} alt=\"dashboard\"/>\r\n                        }\r\n                        <div\r\n                            className={specificationPage ? 'dashboard-text active' : 'dashboard-text'}>Спецификации\r\n                        </div>\r\n                    </div>\r\n                </Link>\r\n                <Link to={'/orders'} className={'link'}>\r\n                    <div className=\"deals items\" onClick={e => dispatch(action.switchOrderPageAction())}>\r\n                        {\r\n                            orderPage ? <img src={secondItemActive} alt=\"dashboardActive\"/> :\r\n                                <img src={secondItem} alt=\"dashboard\"/>\r\n                        }\r\n                        <div className={orderPage ? 'dashboard-text active' : 'dashboard-text'}>Заказы</div>\r\n                    </div>\r\n                </Link>\r\n                <Link to={'/resources'} className={'link'}>\r\n                    <div className=\"vector items\" onClick={e => dispatch(action.switchResourcePageAction())}>\r\n                        {\r\n                            resourcePage ? <img src={thirdItemActive} alt=\"dashboardActive\"/> :\r\n                                <img src={thirdItem} alt=\"dashboard\"/>\r\n                        }\r\n                        <div className={resourcePage ? 'dashboard-text active' : 'dashboard-text'}>Ресурсы</div>\r\n\r\n                    </div>\r\n                </Link>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nSideBar.propTypes = {\r\n    accessToken: PropTypes.string,\r\n    logoutUser: PropTypes.func.isRequired,\r\n};\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        accessToken: state.auth,\r\n    };\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    logoutUser,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SideBar);","D:\\smola-frontend\\src\\components\\header\\index.js",["492"],"import React, {useEffect, useState} from 'react'\r\nimport filter from '../../images/filter.svg'\r\nimport './header.scss'\r\nimport CreateResourceModal from \"../create-resource-modal\";\r\nimport CreateSpecificationModal from \"../create-specification-modal\"\r\nimport UploadResources from \"../upload-resource-modal\"\r\n\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport FilterModal from \"../filter-modal\";\r\nimport CreateOrderModal from \"../create-order-modal\";\r\nimport {logoutUser} from \"../../actions/auth-actions\"\r\nimport {SPECIFICATION_SEARCH, ORDER_SEARCH, RESOURCE_SEARCH} from \"../../constants/search-constatants\"\r\nimport {listSpecifications} from \"../../actions/specification-actions\";\r\nimport {listProducts} from \"../../actions/product-actions\";\r\nimport {listOrders} from \"../../actions/order-list-actions\";\r\n\r\nconst Header = () => {\r\n\r\n    const switcher = useSelector(state => state.switchPage)\r\n    const {specificationPage, resourcePage, orderPage, mainPage, profilePage} = switcher\r\n    const dispatch = useDispatch()\r\n    const [filterModalActive, setFilterModalActive] = useState(false)\r\n    const [resourceModalActive, setResourceModalActive] = useState(false)\r\n    const [specificationModalActive, setSpecificationActive] = useState(false)\r\n    const [uploadResourceModalActive, setUploadResourceModalActive] = useState(false)\r\n    const [orderModalActive, setOrderModalActive] = useState(false)\r\n\r\n    const [searchString, setSearchString] = useState(\"\")\r\n    const {searchOrder, searchResource, searchSpecification} = useSelector(state => state.searching)\r\n\r\n\r\n    useEffect(() =>{\r\n        if (specificationPage) {\r\n            setSearchString(searchSpecification ? searchSpecification : \"\")\r\n        } else if (resourcePage) {\r\n            setSearchString(searchResource ? searchResource : \"\")\r\n        } else if (orderPage) {\r\n            setSearchString(searchOrder ? searchOrder : \"\")\r\n        }\r\n    })\r\n\r\n    const changeSearchString = (string) => {\r\n        setSearchString(string)\r\n        if (specificationPage) {\r\n            dispatch({type: SPECIFICATION_SEARCH, payload: string})\r\n            dispatch(listSpecifications())\r\n        } else if (resourcePage) {\r\n            dispatch({type: RESOURCE_SEARCH, payload: string})\r\n            dispatch(listProducts())\r\n        } else if (orderPage) {\r\n            dispatch({type: ORDER_SEARCH, payload: string})\r\n            dispatch(listOrders())\r\n        }\r\n    }\r\n\r\n    const handleLogout = async () => {\r\n        await logoutUser();\r\n        window.location.href = \"/login/\"\r\n    };\r\n\r\n    return (\r\n        <div className=\"header-wrapper\">\r\n            {mainPage || profilePage ? ''\r\n                : <div className={'filter-wrapper'}>\r\n                    <div className=\"filter-btn\">\r\n                        <button onClick={() => setFilterModalActive(true)}><img src={filter} alt={'filter'}/>Фильтр\r\n                        </button>\r\n                    </div>\r\n\r\n                    <div className=\"search-panel\">\r\n                        <input type=\"text\" placeholder={'Поиск по названию'} value={searchString}\r\n                               onChange={e => changeSearchString(e.target.value)}/>\r\n                    </div>\r\n                </div>\r\n            }\r\n            <div className={'buttons-wrapper'}>\r\n                <div className=\"first-group\">\r\n                    {\r\n                        specificationPage ?\r\n                            <div className=\"add-btn\">\r\n                                <button onClick={() => setSpecificationActive(true)}>Добавить спецификацию</button>\r\n                            </div>\r\n                            : orderPage ?\r\n                            <div className=\"add-btn\">\r\n\r\n                            </div>\r\n                            : resourcePage ?\r\n                                <div className={'group-btn'}>\r\n                                    <div className=\"add-btn\">\r\n                                        <button onClick={() => setUploadResourceModalActive(true)}>Загрузить ресурсы\r\n                                        </button>\r\n                                    </div>\r\n                                    <div className=\"add-btn\">\r\n                                        <button onClick={() => setResourceModalActive(true)}>Добавить ресурс</button>\r\n                                    </div>\r\n                                </div>\r\n                                : null\r\n                    }\r\n                </div>\r\n                <button onClick={handleLogout} className={'logout-btn'}>Выйти</button>\r\n            </div>\r\n\r\n            <FilterModal active={filterModalActive} setActive={setFilterModalActive}/>\r\n            <CreateOrderModal active={orderModalActive} setActive={setOrderModalActive}/>\r\n            <UploadResources active={uploadResourceModalActive} setActive={setUploadResourceModalActive}/>\r\n            <CreateResourceModal active={resourceModalActive} setActive={setResourceModalActive}/>\r\n            <CreateSpecificationModal active={specificationModalActive} setActive={setSpecificationActive}/>\r\n\r\n        </div>\r\n    )\r\n}\r\nexport default Header;","D:\\smola-frontend\\src\\screens\\profile-screen\\index.js",[],"D:\\smola-frontend\\src\\components\\server-error-page\\index.js",[],"D:\\smola-frontend\\src\\screens\\login-screen\\index.js",[],"D:\\smola-frontend\\src\\components\\network-error-page\\index.js",[],"D:\\smola-frontend\\src\\screens\\main-screen\\index.js",[],"D:\\smola-frontend\\src\\components\\unexpected-error-page\\index.js",[],"D:\\smola-frontend\\src\\screens\\specification-screen\\index.js",[],"D:\\smola-frontend\\src\\screens\\order-screen\\index.js",["493"],"import React, {useEffect, useState} from 'react'\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {listOrders} from '../../actions/order-list-actions'\r\nimport Loader from \"../../components/spinner\";\r\nimport ErrorMessage from \"../../components/error-message\";\r\nimport OrderCard from \"../../components/order-card\";\r\nimport './order-screen.scss'\r\nimport OrderItem from \"../../components/order-item\";\r\nimport {switchMainPageAction, switchOrderPageAction} from \"../../actions/switch-page-actions\";\r\n\r\nconst OrderScreen = () => {\r\n\r\n\r\n    const dispatch = useDispatch()\r\n    const orderList = useSelector(state => state.orderList)\r\n    const {error, loading, orders} = orderList\r\n    const [selectedItem, setSelectedItem] = useState(null)\r\n\r\n    const itemSelected = (value) => {\r\n        if (selectedItem === value) {\r\n            setSelectedItem(null)\r\n        } else {\r\n            setSelectedItem(value)\r\n        }\r\n    }\r\n\r\n    useEffect(()=>{\r\n        dispatch(switchOrderPageAction())\r\n    })\r\n    useEffect(() => {\r\n        dispatch(listOrders())\r\n    }, [dispatch])\r\n\r\n    return (\r\n        <div className=\"order-screen-wrapper\">\r\n            <div className=\"menu-wrapper\">\r\n                <div className=\"nav-item\">ID заказа</div>\r\n                <div className=\"nav-item\">Статус</div>\r\n                <div className=\"nav-item\">Дата заказа</div>\r\n                <div className=\"nav-item\">Источник заказа</div>\r\n                <div className=\"nav-item\">Доступность к сборке</div>\r\n            </div>\r\n            {\r\n                loading ? <Loader/>\r\n                    : error ? <ErrorMessage variant={'danger'}>{error}</ErrorMessage>\r\n                    :\r\n                    <div>\r\n                        {\r\n                            Object.values(orders).map(order => {\r\n                                return <OrderItem key={order.id} onSelect={itemSelected} order={order}/>\r\n                            })\r\n                        }\r\n                    </div>\r\n            }\r\n            <OrderCard\r\n                onClose={() => setSelectedItem(null)}\r\n                active={selectedItem != null}\r\n                order={\r\n                    Object.values(orders)\r\n                        .find(order => order.id === selectedItem)\r\n                }\r\n            />\r\n        </div>\r\n    )\r\n}\r\nexport default OrderScreen;\r\n","D:\\smola-frontend\\src\\screens\\resource-screen\\index.js",["494"],"import React, {useEffect, useState} from 'react'\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { listProducts} from '../../actions/product-actions'\r\nimport Loader from \"../../components/spinner\";\r\nimport ErrorMessage from \"../../components/error-message\";\r\n\r\nimport './home-screen.scss'\r\nimport ProductItem from \"../../components/product-item\";\r\nimport {switchResourcePageAction} from \"../../actions/switch-page-actions\";\r\n\r\nconst ResourceScreen = () => {\r\n    const dispatch = useDispatch()\r\n    const productList = useSelector( state => state.productList)\r\n    const { error, loading, products } = productList\r\n\r\n    useEffect(() => {\r\n        dispatch(listProducts())\r\n    }, [dispatch])\r\n\r\n    useEffect(()=>{\r\n        dispatch(switchResourcePageAction())\r\n    })\r\n    console.log(\"RES SCREEN render \" + new Date())\r\n\r\n    return (\r\n        <div className=\"home-screen-wrapper\">\r\n            <div className=\"menu-wrapper\">\r\n                <div className=\"nav-item id\">ID</div>\r\n                <div className=\"nav-item name\">Название</div>\r\n                <div className=\"nav-item\">Цена</div>\r\n                <div className=\"nav-item count\">Количество</div>\r\n                <div className=\"nav-item\">Поставщик</div>\r\n                <div className=\"nav-item last-change-price\">Последняя дата поставки</div>\r\n                <div className=\"nav-item comment\">Коммент</div>\r\n            </div>\r\n            {\r\n                loading ? <Loader/>\r\n                    : error ? <ErrorMessage variant={'danger'}>{error}</ErrorMessage>\r\n                    :\r\n                    <div>\r\n                        {\r\n                            Object.values(products).map(product => {\r\n                                return <ProductItem  key={product.id} product={product}/>\r\n                            })\r\n                        }\r\n                    </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ResourceScreen","D:\\smola-frontend\\src\\actions\\switch-page-actions.js",[],"D:\\smola-frontend\\src\\actions\\product-actions.js",[],"D:\\smola-frontend\\src\\actions\\order-list-actions.js",[],"D:\\smola-frontend\\src\\actions\\auth-actions.js",[],"D:\\smola-frontend\\src\\actions\\specification-actions.js",[],"D:\\smola-frontend\\src\\components\\upload-resource-modal\\index.js",["495"],"import React, {useState} from 'react'\r\nimport \"./upload-resource-modal.scss\"\r\n\r\nimport {uploadResourcesAction} from \"../../actions/resource-upload-actions\";\r\nimport {useDispatch} from \"react-redux\";\r\n\r\n\r\nconst UploadResources = ({active, setActive}) => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n\r\n    const [file, setFile] = useState(null);\r\n    const [direction, setDirection] = useState(\"\")\r\n\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        dispatch(uploadResourcesAction(file, direction));\r\n        setActive(false);\r\n    }\r\n\r\n    return (\r\n        <div\r\n            onClick={() => setActive(false)}\r\n            className={active ? 'resource-modal active' : 'resource-modal'}>\r\n            <form onClick={e => e.stopPropagation()} onSubmit={submitHandler}\r\n                  className={active ? 'upload-modal-content active' : 'upload-modal-content'}>\r\n                <div className=\"upload-resource-modal-title\">Добавить файл</div>\r\n                <label htmlFor=\"file\" className={'upload-resource-text'}>Выберите файл</label>\r\n                <input type=\"file\" id=\"file\" name=\"file\"\r\n                       className={'upload-resource-file'}\r\n                       onChange={e => setFile(e.target.files[0])}\r\n                        />\r\n                <button className={'filter-btn'} type={'submit'}>Применить</button>\r\n            </form>\r\n        </div>)\r\n}\r\n\r\nexport default UploadResources","D:\\smola-frontend\\src\\components\\error-message\\index.js",[],"D:\\smola-frontend\\src\\components\\order-card\\index.js",["496","497"],"import React, {useEffect, useState} from \"react\";\r\nimport './order-card.scss'\r\nimport OrderCardProductsItem from \"../order-card-pruducts-item\";\r\nimport OrderCardSpecificationItem from \"../order-card-specification-item\";\r\nimport axiosAPI from \"../api/axiosApi\";\r\nimport Loader from \"../spinner\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {listOrders} from \"../../actions/order-list-actions\";\r\nimport close from \"../../images/cancel.svg\";\r\n\r\nconst OrderCard = ({active, order, onClose}) => {\r\n\r\n    const [currentCardData, setCurrentCardData] = useState(null)\r\n    const dispatch = useDispatch()\r\n    const getCard = async (id) => {\r\n        const {data} = await axiosAPI.get(`order/${id}/`)\r\n        return data\r\n    }\r\n\r\n    const reloadCard = () => {\r\n        if (order) {\r\n            getCard(order.id).then((newCard => {\r\n                setCurrentCardData(newCard)\r\n            }))\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        reloadCard()\r\n    }, [order])\r\n\r\n    const manageAction = (id, action) => {\r\n        axiosAPI.post('/order/action/',\r\n            {\r\n                id,\r\n                action\r\n            })\r\n            .then(response => {\r\n                reloadCard()\r\n                dispatch(listOrders())\r\n            })\r\n            .catch(error => {\r\n\r\n            })\r\n    }\r\n    return (\r\n        <div className=\"close-wrapper\">\r\n            <div\r\n                onClick={e => e.stopPropagation()}\r\n                className={active ? \"specification-card-wrapper active\" : \"specification-card-wrapper\"}>\r\n                {\r\n                    currentCardData ? currentCardData.order_specification.length ?\r\n                        <div>\r\n                            <div className=\"header-specification-card\">\r\n                                <div className=\"order-card-title\">Товары</div>\r\n                                <div className=\"specification-card-id\">\r\n                                    <div className=\"title\">ID:</div>\r\n                                    <div>{order ? order.external_id : ''}</div>\r\n                                </div>\r\n                                <div className=\"specification-card-title\">\r\n                                    <img onClick={onClose} src={close} className={'close-card-btn'}/>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"nav-card-products\">\r\n                                <div className={'ID'}>ID</div>\r\n                                <div className={'nav-card-name'}>Название</div>\r\n                                <div className={'nav-card-count'}>Количество</div>\r\n                            </div>\r\n                            <div className={'order-card-resource-item'}>\r\n                                {\r\n                                    currentCardData ? <OrderCardSpecificationItem data={currentCardData} reload={reloadCard}/> : ''\r\n                                }\r\n                            </div>\r\n                            <div className=\"header-specification-card\">\r\n                                <div className=\"order-card-title\">Ресурсы</div>\r\n                            </div>\r\n                            <div className={'order-card-resource-item'}>\r\n                                {\r\n                                    currentCardData ? <OrderCardProductsItem data={currentCardData}/> : ''\r\n                                }\r\n                            </div>\r\n                            {currentCardData.missing_specifications.length === 0 ?\r\n                                <div>\r\n                                    <button\r\n                                        className={'activate-btn'}\r\n                                        disabled={!(currentCardData && currentCardData.status === 'INC')}\r\n                                        onClick={e => manageAction(currentCardData.id, 'activate')}>Разобрать\r\n                                    </button>\r\n                                    <button\r\n                                        className={'confirm-btn'}\r\n                                        disabled={!(currentCardData && currentCardData.status === 'RDY')}\r\n                                        onClick={e => {\r\n                                            manageAction(currentCardData.id, 'confirm')\r\n                                        }}>Отгрузить\r\n                                    </button>\r\n\r\n                                </div> : null}\r\n                        </div> :\r\n                        <div className=\"no-order-wrapper\">\r\n                            <div className={'no-order'}>Пустой заказ</div>\r\n                        </div> : <Loader/>\r\n                }\r\n\r\n                {/*<button className={'card-btn'}>Собрать</button>*/}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default OrderCard","D:\\smola-frontend\\src\\components\\filter-modal\\index.js",["498"],"import React, {useEffect, useState} from 'react'\r\n\r\nimport './filter-modal.scss'\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {RESOURCE_FILTER, SPECIFICATION_FILTER, ORDER_FILTER} from \"../../constants/filter-constants\"\r\nimport {listSpecifications} from \"../../actions/specification-actions\";\r\nimport {listProducts} from \"../../actions/product-actions\";\r\nimport {listOrders} from \"../../actions/order-list-actions\";\r\n\r\nconst FilterModal = ({active, setActive}) => {\r\n  const {specificationPage, resourcePage, orderPage} = useSelector(state => state.switchPage)\r\n  const {filterOrder, filterResource, filterSpecification} = useSelector(state => state.filtering)\r\n\r\n  useEffect(() => {\r\n    if (!!specificationPage) {\r\n      let filterSpecificationObject = filterSpecification ? filterSpecification : {}\r\n      if (filterSpecificationObject.hasOwnProperty('ordering')) {\r\n        let ord = filterSpecificationObject.ordering\r\n        setDesc(ord.startsWith('-'))\r\n        setOrderingName(ord.replace('-', ''))\r\n        setOrdering(ord)\r\n      }\r\n\r\n    } else if (!!resourcePage) {\r\n      let filterResourceObject = filterResource ? filterResource : {}\r\n      if (filterResourceObject.hasOwnProperty('ordering')) {\r\n        let ord = filterResourceObject.ordering\r\n        setDesc(ord.startsWith('-'))\r\n        setOrderingName(ord.replace('-', ''))\r\n        setOrdering(ord)\r\n      }\r\n    } else if (!!orderPage) {\r\n      let filterOrderObject = filterOrder ? filterOrder : {}\r\n      if (filterOrderObject.hasOwnProperty('ordering')) {\r\n        let ord = filterOrderObject.ordering\r\n        setDesc(ord.startsWith('-'))\r\n        setOrderingName(ord.replace('-', ''))\r\n        setOrdering(ord)\r\n      }\r\n    }\r\n  }, [specificationPage, resourcePage, orderPage])\r\n\r\n  const [ordering, setOrdering] = useState('')\r\n  const [orderingName, setOrderingName] = useState('')\r\n  const [filter, setFilter] = useState({})\r\n  const [desc, setDesc] = useState(false)\r\n  const [verifyFilter, setVerifyFilter] = useState('')\r\n  const dispatch = useDispatch()\r\n\r\n\r\n  const updateOrdering = (d, oN) => {\r\n    let ord = (d ? '-' : '') + oN\r\n    setOrdering(ord)\r\n  }\r\n\r\n  const setDescending = () => {\r\n    setDesc(!desc)\r\n    updateOrdering(!desc, orderingName)\r\n  }\r\n  const onChangeOrdering = (value) => {\r\n    setOrderingName(value)\r\n    updateOrdering(desc, value)\r\n  }\r\n\r\n  const onVerifyFilterSet = () => {\r\n    setVerifyFilter(!verifyFilter)\r\n    if (verifyFilter) {\r\n      filter.verified = undefined\r\n      setFilter(filter)\r\n    } else {\r\n      filter.verified = 'false'\r\n    }\r\n  }\r\n  const filterOptionHandler = (filterName, filterValue) => {\r\n    filter[filterName] = filterValue\r\n    setFilter({...filter})\r\n  }\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault()\r\n    let payload = {}\r\n    if (ordering && ordering !== 'null' && ordering !== '-null') {\r\n      payload['ordering'] = ordering\r\n    }\r\n    for (let prop in filter) {\r\n      if (!(typeof filter[prop] === \"undefined\")) {\r\n        payload[prop] = filter[prop]\r\n      }\r\n    }\r\n    if (specificationPage) {\r\n      dispatch({\r\n        type: SPECIFICATION_FILTER,\r\n        payload: payload\r\n      })\r\n      dispatch(listSpecifications())\r\n    }\r\n    if (resourcePage) {\r\n      dispatch({\r\n        type: RESOURCE_FILTER,\r\n        payload: payload\r\n      })\r\n      dispatch(listProducts())\r\n    }\r\n    if (orderPage) {\r\n      dispatch({\r\n        type: ORDER_FILTER,\r\n        payload: payload\r\n      })\r\n      dispatch(listOrders())\r\n    }\r\n    setActive(false)\r\n  }\r\n\r\n  return (\r\n      <div\r\n          onClick={() => setActive(false)}\r\n          className={active ? 'filter-modal active' : 'filter-modal'}>\r\n        <form onClick={e => e.stopPropagation()} className={active ? 'modal-content active' : 'modal-content'}>\r\n          <div className=\"filter-wrapper\">\r\n            <div className=\"filter-title\">СОРТИРОВАТЬ ПО:</div>\r\n            <div className=\"checkbox-wrapper\">\r\n              <div className=\"id-checkbox\">\r\n                <div className=\"title\">Не сортировать</div>\r\n                <input type=\"radio\" name={'ordering'} value={'null'} checked={orderingName === 'null'}\r\n                       onChange={e => {\r\n                         onChangeOrdering(e.target.value)\r\n                       }}/>\r\n              </div>\r\n              {resourcePage ? <div className=\"id-checkbox\">\r\n                <div className=\"title\">ID</div>\r\n                <input type=\"radio\" name={'ordering'} value={'external_id'}\r\n                       checked={orderingName === 'external_id'} onChange={e => {\r\n                  onChangeOrdering(e.target.value)\r\n                }}/>\r\n              </div> : null}\r\n              {specificationPage ? <div className=\"id-checkbox\">\r\n                <div className=\"title\">ID</div>\r\n                <input type=\"radio\" name={'ordering'} value={'product_id'}\r\n                       checked={orderingName === 'product_id'} onChange={e => {\r\n                  onChangeOrdering(e.target.value)\r\n                }}/>\r\n              </div> : null}\r\n              {specificationPage ? <div className=\"id-checkbox\">\r\n                <div className=\"title\">Себестоимость</div>\r\n                <input type=\"radio\" name={'ordering'} value={'prime_cost'}\r\n                       checked={orderingName === 'prime_cost'} onChange={e => {\r\n                  onChangeOrdering(e.target.value)\r\n                }}/>\r\n              </div> : null}\r\n              {specificationPage ? <div className=\"id-checkbox\">\r\n                <div className=\"title\">Цена</div>\r\n                <input type=\"radio\" name={'ordering'} value={'price'} checked={orderingName === 'price'}\r\n                       onChange={e => {\r\n                         onChangeOrdering(e.target.value)\r\n                       }}/>\r\n              </div> : null}\r\n              {resourcePage ? <div className=\"id-checkbox\">\r\n                <div className=\"title\">Цена</div>\r\n                <input type=\"radio\" name={'ordering'} value={'cost'} checked={orderingName === 'cost'}\r\n                       onChange={e => {\r\n                         onChangeOrdering(e.target.value)\r\n                       }}/>\r\n              </div> : null}\r\n\r\n              {specificationPage || resourcePage ?\r\n                  <div className=\"id-checkbox\">\r\n                    <div className=\"title\">Количество</div>\r\n                    <input type=\"radio\" name={'ordering'} value={'amount'}\r\n                           checked={orderingName === 'amount'} onChange={e => {\r\n                      onChangeOrdering(e.target.value)\r\n                    }}/>\r\n                  </div> : null}\r\n              {orderPage ? <div className=\"id-checkbox\">\r\n                <div className=\"title\">ID заказа</div>\r\n                <input type=\"radio\" name={'ordering'} value={'external_id'}\r\n                       checked={orderingName === 'external_id'} onChange={e => {\r\n                  onChangeOrdering(e.target.value)\r\n                }}/>\r\n              </div> : null}\r\n              {orderPage ? <div className=\"id-checkbox\">\r\n                <div className=\"title\">Статус</div>\r\n                <input type=\"radio\" name={'ordering'} value={'status'} checked={orderingName === 'status'}\r\n                       onChange={e => {\r\n                         onChangeOrdering(e.target.value)\r\n                       }}/>\r\n              </div> : null}\r\n              {orderPage ? <div className=\"id-checkbox\">\r\n                <div className=\"title\">Дата заказа</div>\r\n                <input type=\"radio\" name={'ordering'} value={'created_at'}\r\n                       checked={orderingName === 'created_at'} onChange={e => {\r\n                  onChangeOrdering(e.target.value)\r\n                }}/>\r\n              </div> : null}\r\n              {orderPage ? <div className=\"id-checkbox\">\r\n                <div className=\"title\">Источник заказа</div>\r\n                <input type=\"radio\" name={'ordering'} value={'source__name'}\r\n                       checked={orderingName === 'source__name'} onChange={e => {\r\n                  onChangeOrdering(e.target.value)\r\n                }}/>\r\n              </div> : null}\r\n              {specificationPage || resourcePage ?\r\n                  <div className=\"id-checkbox\">\r\n                    <div className=\"title\">Название</div>\r\n                    <input type=\"radio\" name={'ordering'} value={'name'} checked={orderingName === 'name'}\r\n                           onChange={e => {\r\n                             onChangeOrdering(e.target.value)\r\n                           }}/>\r\n                  </div> : null}\r\n              {specificationPage ? <div className=\"id-checkbox\">\r\n                <div className=\"title\">Коеффицент</div>\r\n                <input type=\"radio\" name={'ordering'} value={'coefficient'}\r\n                       checked={orderingName === 'coefficient'} onChange={e => {\r\n                  onChangeOrdering(e.target.value)\r\n                }}/>\r\n              </div> : null}\r\n              {specificationPage ? <div className=\"id-checkbox\">\r\n                <div className=\"title\">Категория</div>\r\n                <input type=\"radio\" name={'ordering'} value={'category__name'}\r\n                       checked={orderingName === 'category__name'} onChange={e => {\r\n                  onChangeOrdering(e.target.value)\r\n                }}/>\r\n              </div> : null}\r\n              {resourcePage ? <div className=\"id-checkbox\">\r\n                <div className=\"title\">Поставщик</div>\r\n                <input type=\"radio\" name={'ordering'} value={'provider__name'}\r\n                       checked={orderingName === 'provider__name'} onChange={e => {\r\n                  onChangeOrdering(e.target.value)\r\n                }}/>\r\n              </div> : null}\r\n              {specificationPage ? <div className=\"id-checkbox\">\r\n                <div className=\"title\">Послдениее измениние цены</div>\r\n                <input type=\"radio\" name={'ordering'} value={'last_change_cost'}\r\n                       checked={orderingName === 'last_change_cost'} onChange={e => {\r\n                  onChangeOrdering(e.target.value)\r\n                }}/>\r\n              </div> : null}\r\n\r\n\r\n            </div>\r\n            <div className=\"minus-wrapper\">\r\n              <div className=\"title\">По убыванию</div>\r\n              <input type=\"checkbox\" name={'orderingDESC'} onClick={setDescending}\r\n                     checked={desc}/>\r\n            </div>\r\n\r\n            <div>\r\n              {specificationPage || orderPage ? <div className={'filtration'}>ФИЛЬТРАЦИЯ</div> : null }\r\n              {specificationPage ? <div className=\"ready-checkbox\">\r\n                <div className=\"title\">С неподтверждёнными ценами</div>\r\n                <input type=\"checkbox\" name={'verified'}\r\n                       checked={verifyFilter} onClick={onVerifyFilterSet}/>\r\n              </div> : null}\r\n              {orderPage ? <div className=\"ready-checkbox\">\r\n                <div className=\"title\">Активные</div>\r\n                <input type=\"radio\" name={'orderStatus'} value={'ACT'}\r\n                       checked={filter.status === 'ACT'}\r\n                       onChange={e => filterOptionHandler('status', e.target.value)}/>\r\n              </div> : null}\r\n              {orderPage ? <div className=\"ready-checkbox\">\r\n                <div className=\"title\">Готовые</div>\r\n                <input type=\"radio\" name={'orderStatus'} value={'RDY'}\r\n                       checked={filter.status === 'RDY'}\r\n                       onChange={e => filterOptionHandler('status', e.target.value)}/>\r\n              </div> : null}\r\n              {orderPage ? <div className=\"ready-checkbox\">\r\n                <div className=\"title\">Неактивные</div>\r\n                <input type=\"radio\" name={'orderStatus'} value={'INC'}\r\n                       checked={filter.status === 'INC'}\r\n                       onChange={e => filterOptionHandler('status', e.target.value)}/>\r\n              </div> : null}\r\n              {orderPage ? <div className=\"ready-checkbox\">\r\n                <div className=\"title\">Отгруженные</div>\r\n                <input type=\"radio\" name={'orderStatus'} value={'CNF'}\r\n                       checked={filter.status === 'CNF'}\r\n                       onChange={e => filterOptionHandler('status', e.target.value)}/>\r\n              </div> : null}\r\n              {orderPage ? <div className=\"ready-checkbox\">\r\n                <div className=\"title\">Любой</div>\r\n                <input type=\"radio\" name={'orderStatus'} value={undefined}\r\n                       checked={!filter.status}\r\n                       onChange={e => filterOptionHandler('status', e.target.value)}/>\r\n              </div> : null}\r\n            </div>\r\n          </div>\r\n          <button className={'filter-btn'} onClick={onSubmit}>Применить\r\n          </button>\r\n        </form>\r\n      </div>\r\n  )\r\n}\r\n\r\nexport default FilterModal","D:\\smola-frontend\\src\\components\\specification-item\\index.js",[],"D:\\smola-frontend\\src\\components\\order-item\\index.js",["499","500","501"],"import React, {useState} from 'react'\r\nimport {Link} from \"react-router-dom\";\r\n\r\nimport './order-item.scss'\r\n\r\nconst OrderItem = ({order, onSelect}) => {\r\n\r\n    const textStatus = (code) => {\r\n        switch (code) {\r\n            case \"INC\":\r\n                return \"Не активный\";\r\n            case \"ACT\":\r\n                return \"Активный\";\r\n            case \"ASS\":\r\n                return \"В процессе сборки\";\r\n            case \"RDY\":\r\n                return \"Собран\";\r\n            case \"CNF\":\r\n                return \"Отгружен\";\r\n            case \"CND\":\r\n                return \"Отменён\";\r\n            case \"ARC\":\r\n                return \"Архив\";\r\n        }\r\n    }\r\n\r\n    const createDate = new Date(order.created_at)\r\n\r\n    const getZero = (num) => {\r\n        if (num >= 0 && num < 10) {\r\n            return '0' + num\r\n        } else {\r\n            return num\r\n        }\r\n    }\r\n\r\n    const getDate = (date) => {\r\n        const year = date.getFullYear()\r\n        let month = getZero(date.getMonth() + 1)\r\n        let day = getZero(date.getDate())\r\n        return `${day}-${month}-${year}`\r\n    }\r\n\r\n    const onClick = () => {\r\n        onSelect(order.id)\r\n    }\r\n\r\n    return (\r\n        <div className=\"order-item-wrapper\">\r\n            <div className=\"order-wrapper\" onClick={onClick}>\r\n                <div className=\"order-item id\">{order.external_id}</div>\r\n                <div className=\"order-item status\">{textStatus(order.status)}</div>\r\n                <div className=\"order-item date\">{getDate(createDate)}</div>\r\n                <div className=\"order-item name\">{order.source ? order.source.name : \"нет\"}</div>\r\n                <div className=\"order-item available\">{\r\n                    order.missing_resources.length && order.missing_specifications.length ?\r\n                        <div>Нельзя собрать</div> : <div>Можно собрать</div>\r\n                } </div>\r\n            </div>\r\n        </div>)\r\n\r\n}\r\n\r\nexport default OrderItem;\r\n","D:\\smola-frontend\\src\\screens\\profile-screen\\profile-info\\index.js",["502","503"],"import {useDispatch, useSelector} from \"react-redux\";\r\nimport {useEffect, useState} from \"react\";\r\nimport {profileAction} from \"../../../actions/profile-actions\";\r\nimport AdminPanel from \"../admin-panel\";\r\nimport {editProfileAction} from \"../../../actions/profile-edit\";\r\n\r\nimport './profile-info.scss'\r\n\r\nconst ProfileInfo = () => {\r\n    const dispatch = useDispatch()\r\n    const profileDetail = useSelector(state => state.profile)\r\n    const {error, loading, profile} = profileDetail\r\n    const [username, setUsername] = useState()\r\n    const [email, setEmail] = useState()\r\n    const [lastName, setLastName] = useState()\r\n    const [firstName, setFirstName] = useState()\r\n\r\n\r\n    useEffect(() => {\r\n        dispatch(profileAction())\r\n    }, [dispatch])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        if (!Boolean(username))\r\n            setUsername(profile.username)\r\n        if (!Boolean(lastName))\r\n            setLastName(profile.last_name)\r\n        if (!Boolean(firstName) )\r\n            setFirstName(profile.first_name)\r\n        if (!Boolean(email))\r\n            setEmail(profile.email)\r\n        console.log({username})\r\n        console.log({lastName})\r\n        console.log({firstName})\r\n        console.log({email})\r\n        dispatch(editProfileAction(username, email, lastName, firstName));\r\n    }\r\n\r\n    return (\r\n        <div className={'profile-info-wrapper'}>\r\n            <div>\r\n                <form onSubmit={submitHandler}>\r\n                    <div className={'profile-info-text'}>\r\n                        Логин: <input type=\"text\" value={username ? username : profile.username}\r\n                                         onChange={e => setUsername(e.target.value)}/>\r\n                    </div>\r\n                    <div className={'profile-info-text'}>\r\n                        Email: <input type=\"text\" value={email ? email : profile.email}\r\n                                      onChange={e => setEmail(e.target.value)}/>\r\n                    </div>\r\n                    <div className={'profile-info-text'}>\r\n                        Имя: <input type=\"text\" value={firstName ? firstName : profile.first_name}\r\n                                    onChange={e => setFirstName(e.target.value)}/>\r\n                    </div>\r\n                    <div className={'profile-info-text'}>\r\n                        Фамилия: <input type=\"text\" value={lastName ? lastName : profile.last_name}\r\n                                        onChange={e => setLastName(e.target.value)}/>\r\n                    </div>\r\n                    <div className={'profile-info-role'}>\r\n                        <div>Роль:</div>\r\n                        <div>\r\n                        {profile.role === 40 ? <div>Админ</div>\r\n                            : profile.role === 30 ? <div>Работник офиса</div>\r\n                                : profile.role === 20 ? <div>Работник склада</div> : null}\r\n                    </div>\r\n                    </div>\r\n                    <button type={'submit'}>Подтведить</button>\r\n                </form>\r\n                <hr/>\r\n                {\r\n                    profile.role === 40 ? <AdminPanel/> : null\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default ProfileInfo;","D:\\smola-frontend\\src\\components\\create-resource-modal\\index.js",["504"],"import React, {useState} from 'react'\r\n\r\nimport './create-resource-modal.scss'\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport Loader from \"../spinner\";\r\nimport axiosAPI from \"../api/axiosApi\";\r\nimport {listProducts} from \"../../actions/product-actions\";\r\n\r\n\r\nconst CreateResourceModal = ({active, setActive}) => {\r\n  const dispatch = useDispatch()\r\n\r\n  const [cost, setCost] = useState(0.0);\r\n  const [name, setName] = useState(\"\");\r\n  const [provider_name, setProviderName] = useState(\"\");\r\n  const [amount, setAmount] = useState(0.0);\r\n  const [external_id, setExternalId] = useState(\"\");\r\n  const [amountLimit, setAmountLimit] = useState(10.0);\r\n  const [error, setError] = useState(null)\r\n  const [loading, setLoading] = useState(false)\r\n\r\n  const reloadData = () => {\r\n    setCost(0.0)\r\n    setName('')\r\n    setProviderName('')\r\n    setAmount(0.0)\r\n    setExternalId('')\r\n    setAmountLimit((10.0))\r\n  }\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n    setLoading(true)\r\n    axiosAPI.post('resource/create/',\r\n        {\r\n          'name': name,\r\n          'external_id': external_id,\r\n          'provider_name': provider_name,\r\n          'cost': cost,\r\n          'amount': amount,\r\n          'amount_limit': amountLimit\r\n        }\r\n    )\r\n        .then(response => {\r\n          setActive(false)\r\n          dispatch(listProducts())\r\n          reloadData()\r\n          setLoading(false)\r\n        })\r\n        .catch(error => {\r\n          setLoading(false)\r\n          setError(error.response.data)\r\n        })\r\n  }\r\n\r\n    return (\r\n        <div\r\n            onClick={() => setActive(false)}\r\n            className={active ? 'resource-modal active' : 'resource-modal'}>\r\n            <form onClick={e => e.stopPropagation()} onSubmit={submitHandler}\r\n                  className={active ? 'create-modal-content active' : 'create-modal-content'}>\r\n                <div className=\"resource-modal-title\">Создать ресурс</div>\r\n                <br/>\r\n                <div className=\"create-resource-wrapper\">\r\n                    <label htmlFor=\"name\" className={'resource-create-title'}>Название ресурса</label>\r\n                    {error && error.name ? <div>Некоректное значение</div> : null}\r\n                    <input type=\"text\" name=\"name\" id=\"name\"\r\n                           className={'create-resource-input'}\r\n                           onChange={e => setName(e.target.value)}\r\n                           value={name}/>\r\n                    <label htmlFor=\"external_id\" className={'resource-create-title'}>ID</label>\r\n                    {error && error.external_id ? <div>Некоректное значение</div> : null}\r\n                    <input type=\"text\" name=\"external_id\" id=\"external_id\"\r\n                           className={'create-resource-input'}\r\n                           onChange={e => setExternalId(e.target.value)}\r\n                           value={external_id}/>\r\n                    <label htmlFor=\"provider_name\" className={'resource-create-title'}>Поставщик</label>\r\n                    {error && error.provider_name ? <div>Некоректное значение</div> : null}\r\n                    <input type=\"text\" name=\"provider_name\" id=\"provider_name\"\r\n                           className={'create-resource-input'}\r\n                           onChange={e => setProviderName(e.target.value)}\r\n                           value={provider_name}/>\r\n                    <label htmlFor=\"cost\" className={'resource-create-title'}>Цена</label>\r\n                    {error && error.cost ? <div>Некоректное значение</div> : null}\r\n                    <input type=\"number\" step=\"0.01\" name=\"cost\" id=\"cost\"\r\n                           className={'create-resource-input'}\r\n                           onChange={e => setCost(parseFloat(e.target.value))}\r\n                           value={cost}/>\r\n                    <label htmlFor=\"amount\" className={'resource-create-title'}>Количество</label>\r\n                    {error && error.amount ? <div>Некоректное значение</div> : null}\r\n                    <input type=\"number\" step=\"0.01\" name=\"amount\" id=\"amount\"\r\n                           className={'create-resource-input'}\r\n                           onChange={e => setAmount(parseFloat(e.target.value))}\r\n                           value={amount}/>\r\n                    <label htmlFor=\"amountLimit\" className={'resource-create-title'}>Минимальное критическое\r\n                        значение</label>\r\n                    {error && error.amount_limit ? <div>Некоректное значение</div> : null}\r\n                    <input type=\"number\" step=\"0.01\" name=\"amountLimit\" id=\"amountLimit\"\r\n                           className={'create-resource-input'}\r\n                           onChange={e => setAmountLimit(parseFloat(e.target.value))}\r\n                           value={amountLimit}/>\r\n                </div>\r\n                {loading ? <Loader/> : <button className={'filter-btn'} type={'submit'}>Применить</button>}\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CreateResourceModal","D:\\smola-frontend\\src\\components\\create-order-modal\\index.js",["505"],"import React, {useEffect, useState} from 'react'\r\nimport './create-order-modal.scss'\r\nimport {createOrderAction} from \"../../actions/order-create-actions\";\r\nimport OrderProduct from \"./order-product\"\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {shortlistSpecification} from \"../../actions/specification-shortlist-actions\"\r\nimport axiosAPI from \"../api/axiosApi\";\r\nimport {listOrders} from \"../../actions/order-list-actions\";\r\nimport Loader from \"../spinner\";\r\n\r\n\r\nconst CreateOrderModal = ({active, setActive}) => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const [productDict, setProductDict] = useState({})\r\n    const [externalId, setExternalId] = useState(\"\");\r\n    const [source, setSource] = useState(\"\");\r\n    const [productListForOption, setProductListForOption] = useState([]);\r\n    const [productList, setProductList] = useState([]);\r\n    const [error, setError] = useState();\r\n    const [loading, setLoading] = useState(false);\r\n    const [counter, setCounter] = useState(0);\r\n    const {specificationsShortList} = useSelector(state => state.shortlistSpecification)\r\n\r\n    const reloadData = () => {\r\n        setSource('')\r\n        setExternalId('')\r\n        setProductListForOption([])\r\n        setProductDict({})\r\n        setProductList([])\r\n        setError(null)\r\n        setLoading(false)\r\n    }\r\n\r\n    useEffect(() => {\r\n            dispatch(shortlistSpecification())\r\n        }, [dispatch]\r\n    )\r\n\r\n    const addSpecificationToDict = id => {\r\n        productDict[id] = 1;\r\n    }\r\n\r\n    const setSpecificationAmount = (id, amount) => {\r\n        productDict[id] = amount\r\n    }\r\n\r\n    const changeSpecification = (old_id, new_id) => {\r\n        productDict[new_id] = productDict[old_id]\r\n        delete productDict[old_id]\r\n    }\r\n\r\n    const removeSpecification = (id, index) => {\r\n        delete productDict[id]\r\n        setProductListForOption([...productListForOption.slice(0, index), ...productListForOption.slice(index + 1)])\r\n    }\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        for (let product in productDict) {\r\n            productList.push({\"product_id\": product, \"amount\": productDict[product]})\r\n        }\r\n        setLoading(true)\r\n        axiosAPI.post(\r\n            'order/create/',\r\n            {\r\n                'external_id': externalId,\r\n                'source_name': source,\r\n                'specifications_create': productList\r\n            }\r\n        )\r\n            .then(response => {\r\n                setActive(false)\r\n                dispatch(listOrders())\r\n                reloadData()\r\n            })\r\n            .catch(error => {\r\n                setLoading(false)\r\n                setError(error.response.data)\r\n                setProductList([])\r\n            })\r\n    }\r\n\r\n    const addProductSelect = e => {\r\n        e.preventDefault()\r\n        setCounter(counter + 1)\r\n        const nextProductListForOption = [...productListForOption,\r\n            (<OrderProduct number={productListForOption.length}\r\n                           productList={specificationsShortList}\r\n                           onAmountChange={setSpecificationAmount}\r\n                           onProductAdd={addSpecificationToDict} index={counter}\r\n                           remove={removeSpecification} change={changeSpecification}\r\n            />)]\r\n        setProductListForOption(nextProductListForOption)\r\n    }\r\n\r\n\r\n    return (\r\n        <div onClick={() => setActive(false)} className={active ? 'order-modal active' : 'order-modal'}>\r\n            <form onClick={e => e.stopPropagation()} onSubmit={submitHandler}\r\n                  className={active ? 'order-modal-content active' : 'order-modal-content'}>\r\n                <div className=\"order-modal-title\"> Создать заказ</div>\r\n                <div className=\"create-order-wrapper\">\r\n                    <div className=\"order-content-wrapper\">\r\n                        <div className=\"first-title\">Блок создания</div>\r\n                        <label htmlFor=\"externalId\" className={'order-create-title'}>ID</label>\r\n                        {error && error.external_id ? <div>Некоректное значение</div> : null}\r\n                        <input type=\"text\" name=\"externalId\" id=\"externalId\"\r\n                               className={'create-order-input'}\r\n                               onChange={e => setExternalId(e.target.value)}\r\n                               value={externalId}/>\r\n                        <label htmlFor=\"source\" className={'order-create-title'}>Источник заказа</label>\r\n                        {error && error.source_name ? <div>Некоректное значение</div> : null}\r\n                        <input type=\"text\" name=\"source\" id=\"source\"\r\n                               className={'create-order-input'}\r\n                               onChange={e => setSource(e.target.value)}\r\n                               value={source}/>\r\n                    </div>\r\n                    <div className=\"add-block-order\">\r\n                        <div className=\"second-title\">Блок продуктов</div>\r\n                        {error && error.specifications_create ? <div>Некоректное значение</div> : null}\r\n                        {productListForOption.map(product => product)}\r\n                        {loading ? <Loader/> :\r\n                            <button onClick={addProductSelect} className={'add-spec-btn'}>Добавить продукт в\r\n                                заказ</button>}\r\n                    </div>\r\n                </div>\r\n                <button className={'filter-btn'} type={'submit'}>Применить</button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default CreateOrderModal;","D:\\smola-frontend\\src\\components\\specification-card\\index.js",["506","507","508","509","510"],"D:\\smola-frontend\\src\\screens\\profile-screen\\change-password\\index.js",["511","512"],"import {useDispatch} from \"react-redux\";\r\nimport {changePasswordAction} from \"../../../actions/profile-change-password\";\r\nimport React, {useState} from \"react\";\r\n\r\nimport './change-password.scss'\r\nimport axiosAPI from \"../../../components/api/axiosApi\";\r\n\r\nconst ChangePasswordBlock = () => {\r\n    const [password, setPassword] = useState(\"\")\r\n    const [passwordRepeat, setPasswordRepeat] = useState(\"\")\r\n    const [errorMessage, setErrorMessage] = useState(\"\")\r\n    const [currentPassword, setCurrentPassword] = useState(\"\")\r\n\r\n    const submitHandler = e => {\r\n        e.preventDefault();\r\n        if (password === passwordRepeat) {\r\n            axiosAPI.post('authenticate/user/change-password/',\r\n                {\r\n                    'old_password': currentPassword,\r\n                    'password': password\r\n                }\r\n            )\r\n                .then(response => {\r\n                    reloadData()\r\n                    setErrorMessage(\"\")\r\n                })\r\n                .catch(error => {\r\n                    if (error.response.data.old_password) {\r\n                        setErrorMessage(\"Неверный пароль\")\r\n                        setCurrentPassword('')\r\n                    }\r\n                })\r\n        } else\r\n            setErrorMessage(\"Пароли не совпадают\");\r\n    }\r\n\r\n    const reloadData = () => {\r\n        setCurrentPassword('')\r\n        setPassword('')\r\n        setPasswordRepeat('')\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <form onClick={e => e.stopPropagation()} onSubmit={submitHandler}>\r\n                <div className={'change-password-wrapper'}>\r\n                    <div className=\"change-password-title\">Смена пароля</div>\r\n                    {errorMessage ? (<div>{errorMessage}</div>) : null}\r\n                    <label htmlFor=\"currentPassword\" className={'password'}>Текущий пароль</label>\r\n                    <input id={\"currentPassword\"} type=\"password\" value={currentPassword}\r\n                           onChange={e => setCurrentPassword(e.target.value)}/>\r\n                    <br/>\r\n                    <label htmlFor=\"password1\" className={'password'}>Новый пароль</label>\r\n                    <input id={\"password1\"} type=\"password\" value={password}\r\n                           onChange={e => setPassword(e.target.value)}/>\r\n                    <label htmlFor=\"password2\" className={'password'}>Повторите пароль</label>\r\n                    <input id={\"password2\"} type=\"password\" value={passwordRepeat}\r\n                           onChange={e => setPasswordRepeat(e.target.value)}/>\r\n\r\n                    <button type={'submit'}>Изменить</button>\r\n                </div>\r\n\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ChangePasswordBlock;","D:\\smola-frontend\\src\\components\\create-specification-modal\\index.js",[],"D:\\smola-frontend\\src\\components\\product-item\\index.js",["513"],"import React, {useEffect, useState} from 'react'\r\nimport {useDispatch} from \"react-redux\";\r\nimport {changePriceAction} from '../../actions/price-actions'\r\nimport {removeAction} from \"../../actions/remove-resources-actions\";\r\n\r\nimport './product-item.scss'\r\nimport CollectResourceModal from \"../collect-resource-modal\";\r\n\r\nconst ProductItem = ({product}) => {\r\n\r\n    const dispatch = useDispatch()\r\n    const [price, setPrice] = useState(product.cost)\r\n    const [selectCheckbox, setSelectCheckbox] = useState({})\r\n    const [showDeleteBtn, setShowDeleteBtn] = useState(false)\r\n    const [active, setActive] = useState(false)\r\n\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(changePriceAction(product.id, price))\r\n    }\r\n\r\n    const dateCount = new Date(product.last_change_amount)\r\n\r\n    const getZero = (num) => {\r\n        if (num >= 0 && num < 10) {\r\n            return '0' + num\r\n        } else {\r\n            return num\r\n        }\r\n    }\r\n\r\n    const getDate = (date) => {\r\n        if (date) {\r\n            const year = date.getFullYear()\r\n            let month = getZero(date.getMonth() + 1)\r\n            let day = getZero(date.getDate())\r\n            return `${day}-${month}-${year}`\r\n        } else {\r\n            return '==//=='\r\n        }\r\n    }\r\n\r\n    const deleteHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(removeAction(product.id))\r\n    }\r\n\r\n    const handleChange = (event) => {\r\n        setSelectCheckbox({'checked': event.target.checked, 'id': product.id})\r\n        setShowDeleteBtn(event.target.checked)\r\n    }\r\n\r\n    console.log(product)\r\n\r\n    return (\r\n        <div className=\"product-item-wrapper\">\r\n            <div className=\"item-wrapper\">\r\n                <input type={'checkbox'} className={'delete-checkbox'} checked={selectCheckbox[product.id]}\r\n                       onChange={handleChange}/>\r\n                <div className=\"product-item id\">{product.external_id}</div>\r\n                <div className=\"product-item name\">{product.name}</div>\r\n                <form className=\"form-wrapper\" onSubmit={submitHandler}>\r\n                    <input\r\n                        type={'number'}\r\n                        name={'price'}\r\n                        onChange={e => setPrice(e.target.value)}\r\n                        value={parseFloat(price).toFixed(2)}\r\n                        className={'product-item price'}/>\r\n                    <button type={'submit'} className={'confirm-btn'}>✓</button>\r\n                </form>\r\n                <div className=\"product-item count\">{product.amount ? parseFloat(product.amount) : 0}</div>\r\n                <div className=\"product-item diller\">{product.provider ? product.provider.name : 'нет'}</div>\r\n                <div className=\"product-item last-count-change\">{getDate(dateCount)}</div>\r\n                <div className={'product-item comment'}>{product.comment ? product.comment : 'нет'}</div>\r\n            </div>\r\n            <form>\r\n                <button className={showDeleteBtn ? 'delete-btn active' : 'delete-btn'} onClick={deleteHandler}>Удалить\r\n                </button>\r\n            </form>\r\n            <button onClick={() => setActive(true)} className={'collect-btn'}>Добавить</button>\r\n            <CollectResourceModal id={product.id} active={active} setActive={setActive}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProductItem","D:\\smola-frontend\\src\\components\\api\\authenticationApi.js",[],"D:\\smola-frontend\\src\\actions\\resource-upload-actions.js",[],"D:\\smola-frontend\\src\\actions\\profile-actions.js",[],"D:\\smola-frontend\\src\\actions\\order-create-actions.js",[],"D:\\smola-frontend\\src\\actions\\specification-shortlist-actions.js",[],"D:\\smola-frontend\\src\\actions\\remove-specifications-actions.js",[],"D:\\smola-frontend\\src\\actions\\profile-edit.js",[],"D:\\smola-frontend\\src\\actions\\price-actions.js",[],"D:\\smola-frontend\\src\\actions\\resource-shortlist-actions.js",[],"D:\\smola-frontend\\src\\actions\\profile-change-password.js",[],"D:\\smola-frontend\\src\\actions\\remove-resources-actions.js",[],"D:\\smola-frontend\\src\\components\\specification-card-item\\card-item.js",["514","515"],"import React, {useState} from \"react\";\r\n\r\nimport './card-item.scss'\r\n\r\nconst CardItem = ({data, responseData}) => {\r\n  let amountDict = {}\r\n  let classes = true\r\n  if (responseData) {\r\n    Object.values(responseData).map(pair => {\r\n      amountDict[pair.id] = pair.amount\r\n      if(pair.amount < 0) {\r\n        classes = false\r\n      }\r\n    })\r\n  }\r\n\r\n  const items = data.resources.map(item => (\r\n      <div className={ classes ? 'resource-item-wrapper' : 'resource-item-wrapper active'}>\r\n        <div className={'resource-external-id'}>{item.resource.external_id}</div>\r\n        <div className={'resource-name'}>{item.resource.name}</div>\r\n        <div className={'resource-amount'}>{parseInt(item.amount)}</div>\r\n        <div className={'resource-amount'}>({amountDict.hasOwnProperty(item.resource.id) ? amountDict[item.resource.id] : ''})</div>\r\n      </div>\r\n  ))\r\n\r\n  return (\r\n      <div>{items}</div>\r\n  )\r\n}\r\n\r\nexport default CardItem","D:\\smola-frontend\\src\\components\\order-card-specification-item\\index.js",["516"],"import React, {useEffect, useState} from \"react\";\r\n\r\nimport './order-card-resources-item.scss'\r\nimport {OrderSpecificationItem} from \"./specification-item\"\r\n\r\nconst OrderCardSpecificationItem = ({data, reload}) => {\r\n    let background = false\r\n\r\n    const [items, setItems] = useState([])\r\n\r\n    useEffect(() => {\r\n        setItems([...data.order_specification.map(item => {\r\n            background = !!data.missing_specifications.includes(item.specification.id);\r\n            return (<OrderSpecificationItem orderId={data.id} orderSpec={item} background={background}\r\n                                            active={data.status === 'ACT' || data.status ===  'ASS'}  reload={reload}/>)\r\n        })])\r\n    })\r\n\r\n    return (<div>{items}</div>)\r\n}\r\n\r\nexport default OrderCardSpecificationItem","D:\\smola-frontend\\src\\components\\order-card-pruducts-item\\index.js",["517","518","519","520","521"],"import React, {useEffect, useState} from \"react\";\r\n\r\nimport './order-card-products-item.scss'\r\n\r\n\r\nconst OrderCardProductsItem = ({data}) => {\r\n\r\n  let resourceDict = {}\r\n  let resources = []\r\n  let missingResources = data.missing_resources\r\n\r\n\r\n  let background = false\r\n\r\n  data.order_specification.map(orderSpecification => {\r\n    orderSpecification.specification.res_specs.map(resSpec => {\r\n      let resource = resSpec.resource\r\n      if (resourceDict.hasOwnProperty(resource.id)) {\r\n        resourceDict[resource.id] = resourceDict[resource.id] + resSpec.amount * orderSpecification.amount\r\n        return\r\n      } else {\r\n        resourceDict[resource.id] = resSpec.amount * orderSpecification.amount\r\n      }\r\n      background = !!missingResources.includes(resource.id);\r\n      resources.push(\r\n          <div className={background ? 'order-card-products-wrapper active' : 'order-card-products-wrapper'}>\r\n            <div className={'order-card-id'}>{resource.id}</div>\r\n            <div className={'order-card-name'}>{resource.name}</div>\r\n            <div className={'order-card-amount'}>{resourceDict[resource.id]}</div>\r\n          </div>\r\n      )\r\n    })\r\n  })\r\n\r\n  return (\r\n      <div>\r\n        {resources.length ?\r\n            <div>\r\n              <div className={\"nav-card-products\"}>\r\n                <div className={'ID'}>ID</div>\r\n                <div className={'nav-card-name'}>Название</div>\r\n                <div className={'nav-card-count'}>Количество</div>\r\n              </div>\r\n              {resources}\r\n            </div> : ''\r\n        }\r\n      </div>\r\n  )\r\n}\r\nexport default OrderCardProductsItem","D:\\smola-frontend\\src\\components\\create-order-modal\\order-product\\index.js",["522"],"import React, {useState} from 'react'\r\n\r\nimport './order-product.scss'\r\n\r\n\r\nconst OrderProduct = ({number, productList, onProductAdd, onAmountChange, index, remove, change}) => {\r\n\r\n  const [productId, setProductId] = useState(null);\r\n  const [amount, setAmount] = useState(1);\r\n  const [activeAmount, setActiveAmount] = useState(false)\r\n  const [value, setValue] = useState(\"\")\r\n  const [indx, setIndex] =  useState(index)\r\n\r\n  const changeProductId = (newProductId) => {\r\n    if (productId == null){\r\n      addProduct(newProductId)\r\n    }else{\r\n      change(productId, newProductId)\r\n      setProductId(newProductId)\r\n    }\r\n  }\r\n\r\n  const addProduct = (id) => {\r\n    setProductId(id);\r\n    setValue(value);\r\n    setActiveAmount(true);\r\n    onProductAdd(id);\r\n  }\r\n\r\n  const setProductAmount = (id, amount) => {\r\n    setAmount(amount);\r\n    onAmountChange(id, amount)\r\n  }\r\n\r\n  return (\r\n      <div className={\"option\"}>\r\n        <div>\r\n          <label htmlFor={\"product-\" + number + \"-id\"} className={'title-order-product'}>Продукт {number}</label>\r\n          <select name={\"product-\" + number + \"-id\"} id={\"product-\" + number + \"-id\"}\r\n                  onChange={e => changeProductId(e.target.value)} value={productId} className={'resource-select'}>\r\n            <option name={\"default-option-\" + number} key={\"default-option-\" + number}\r\n                    id={\"default-option-\" + number} value=\"----\">----</option>\r\n            {Object.values(productList).map(product => {\r\n                  return <option name={\"product-\" + product.id + \"-option\"}\r\n                                 id={\"product-\" + product.id + \"-option\"}\r\n                                 value={product.product_id}\r\n                                 key={\"product-\" + product.id + \"-option\"}>{product.name} - {product.id}</option>\r\n                }\r\n            )}\r\n          </select>\r\n        </div>\r\n        <div>\r\n          <label htmlFor={\"product-\" + number + \"-amount\"}\r\n                 className={'title-order-product title-count'}>Количество</label>\r\n          <input type=\"number\" name={\"product-\" + number + \"-amount\"} id={\"product-\" + number + \"-amount\"}\r\n                 disabled={!activeAmount}\r\n                 value={amount}\r\n                 className={'resource-amount-input'}\r\n                 onChange={e => setProductAmount(productId, e.target.value)}/>\r\n        </div>\r\n        <div>\r\n          <button onClick={e => remove(productId, indx)} className={'delete-spec-btn'}>x</button>\r\n        </div>\r\n      </div>\r\n  )\r\n}\r\n\r\nexport default OrderProduct","D:\\smola-frontend\\src\\screens\\profile-screen\\admin-panel\\index.js",[],"D:\\smola-frontend\\src\\components\\create-specification-modal\\specification-resource\\index.js",["523"],"import React, {useState} from 'react'\r\n\r\nimport './specification-resource.scss'\r\n\r\n\r\nconst SpecificationResource = ({number, resourceList, onResourceAdd, onAmountChange, index, remove, change}) => {\r\n\r\n    const [id, setId] = useState(null);\r\n    const [amount, setAmount] = useState(1);\r\n    const [activeAmount, setActiveAmount] = useState(false)\r\n    const [value, setValue] = useState(\"\")\r\n    const [indx, setIndex] = useState(index)\r\n\r\n    const changeId = (newId) => {\r\n        if (id == null){\r\n            addResource(newId)\r\n        }else{\r\n            change(id, newId)\r\n            setId(newId)\r\n        }\r\n    }\r\n\r\n    const addResource = (id) => {\r\n        setId(id);\r\n        setValue(value);\r\n        setActiveAmount(true);\r\n        onResourceAdd(id);\r\n    }\r\n\r\n    const setResourceAmount = (id, amount) => {\r\n        setAmount(amount);\r\n        onAmountChange(id, amount)\r\n    }\r\n\r\n    return (\r\n        <div className={\"option\"}>\r\n            <div>\r\n                <label htmlFor={\"resource-\" + number + \"-id\"} className={'title-spec-resource'}>Ресурс {number}</label>\r\n                <select name={\"resource-\" + number + \"-id\"} id={\"resource-\" + number + \"-id\"}\r\n                        onChange={e => changeId(e.target.value) } value={id} className={'resource-select'}>\r\n                    <option name={\"default-option-\" + number} key={\"default-option-\" + number}\r\n                            id={\"default-option-\" + number} value=\"----\">----\r\n                    </option>\r\n                    {Object.values(resourceList).map(resource => {\r\n                        return <option name={\"resource-\" + resource.id + \"-option\"}\r\n                                       id={\"resource-\" + resource.id + \"-option\"}\r\n                                       value={resource.id}\r\n                                       key={\"resource-\" + resource.id + \"-option\"}>{resource.name} - {resource.external_id}</option>\r\n                    })\r\n                    }\r\n                </select>\r\n            </div>\r\n            <div>\r\n                <label htmlFor={\"resource-\" + number + \"-amount\"} className={'title-spec-resource title-count'}>Количество</label>\r\n                <input type=\"number\" name={\"resource-\" + number + \"-amount\"} id={\"resource-\" + number + \"-amount\"}\r\n                       disabled={!activeAmount}\r\n                       value={amount}\r\n                       className={'resource-amount-input'}\r\n                       onChange={e => setResourceAmount(id, e.target.value)}/>\r\n            </div>\r\n            <div>\r\n                <button onClick={e => remove(id, indx)} className={'delete-spec-btn krestik'}>x</button>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SpecificationResource","D:\\smola-frontend\\src\\components\\amount-specification-modal\\index.js",["524"],"import React, {useState} from 'react'\r\n\r\nimport './amount-specification-modal.scss'\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport Loader from \"../spinner\";\r\nimport axiosAPI from \"../api/axiosApi\";\r\nimport {listProducts} from \"../../actions/product-actions\";\r\n\r\n\r\nconst AmountSpecificationModal = ({active, setActive, id}) => {\r\n\r\n  const dispatch = useDispatch()\r\n  const [amount, setAmount] = useState(0);\r\n  const [loading, setLoading] = useState(false)\r\n  const [error, setError] = useState(null)\r\n\r\n  const reloadData = () => {\r\n    setAmount(0.0)\r\n  }\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n    setLoading(true)\r\n    axiosAPI.post('specification/build-set/',\r\n        {\r\n          'id': id,\r\n          'amount': amount,\r\n        }\r\n    )\r\n        .then(response => {\r\n          setActive(false)\r\n          dispatch(listProducts())\r\n          reloadData()\r\n          setLoading(false)\r\n        })\r\n        .catch(error => {\r\n          setLoading(false)\r\n          setError(error.response.data)\r\n        })\r\n  }\r\n\r\n  return (\r\n      <div\r\n          onClick={() => setActive(false)}\r\n          className={active ? 'resource-modal active' : 'resource-modal'}>\r\n        <form onClick={e => e.stopPropagation()} onSubmit={submitHandler}\r\n              className={active ? 'create-modal-content active' : 'create-modal-content'}>\r\n          <div className=\"resource-modal-title\">Собрать ресурс</div>\r\n          <br/>\r\n            <label htmlFor=\"amount\" className={'resource-create-title'}>Количество</label>\r\n            {error && error.amount ? <div>Некоректное значение</div> : null}\r\n            <input type=\"number\" step=\"0.01\" name=\"amount\" id=\"amount\"\r\n                   className={'amount-specification-input'}\r\n                   onChange={e => setAmount(parseFloat(e.target.value))}\r\n                   value={amount}/>\r\n          {loading ? <Loader/> : <button className={'filter-btn'} type={'submit'}>Применить</button>}\r\n        </form>\r\n      </div>\r\n  )\r\n}\r\n\r\nexport default AmountSpecificationModal","D:\\smola-frontend\\src\\components\\collect-resource-modal\\index.js",["525"],"import React, {useState} from 'react'\r\n\r\nimport './collect-resource-modal.scss'\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport Loader from \"../spinner\";\r\nimport axiosAPI from \"../api/axiosApi\";\r\nimport {listProducts} from \"../../actions/product-actions\";\r\n\r\n\r\nconst CollectResourceModal = ({active, setActive, id}) => {\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const [name, setName] = useState(\"\");\r\n  const [provider_name, setProviderName] = useState(\"\");\r\n  const [amount, setAmount] = useState(0);\r\n  const [timeStamp, setTimeStamp] = useState('');\r\n  const [comment, setComment] = useState('');\r\n  const [cost, setCost] = useState(0)\r\n  const [loading, setLoading] = useState(false)\r\n  const [error, setError] = useState(null)\r\n\r\n  const reloadData = () => {\r\n    setName('')\r\n    setProviderName('')\r\n    setAmount(0.0)\r\n    setTimeStamp('')\r\n    setComment('')\r\n    setCost(0)\r\n  }\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n    setLoading(true)\r\n    axiosAPI.post('resource/delivery/',\r\n        {\r\n          'resource': id,\r\n          'name': name,\r\n          'provider_name': provider_name,\r\n          'amount': amount,\r\n          'time_stamp': timeStamp,\r\n          'comment': comment,\r\n          'cost': cost\r\n        }\r\n    )\r\n        .then(response => {\r\n          setActive(false)\r\n          dispatch(listProducts())\r\n          reloadData()\r\n          setLoading(false)\r\n        })\r\n        .catch(error => {\r\n          setLoading(false)\r\n          setError(error.response.data)\r\n        })\r\n  }\r\n\r\n  return (\r\n      <div\r\n          onClick={() => setActive(false)}\r\n          className={active ? 'resource-modal active' : 'resource-modal'}>\r\n        <form onClick={e => e.stopPropagation()} onSubmit={submitHandler}\r\n              className={active ? 'create-modal-content active' : 'create-modal-content'}>\r\n          <div className=\"resource-modal-title\">Собрать ресурс</div>\r\n          <br/>\r\n          <div className=\"create-resource-wrapper\">\r\n            <label htmlFor=\"name\" className={'resource-create-title'}>Именование</label>\r\n            {error && error.name ? <div>Некоректное значение</div> : null}\r\n            <input type=\"text\" name=\"name\" id=\"name\"\r\n                   className={'create-resource-input'}\r\n                   onChange={e => setName(e.target.value)}\r\n                   value={name}/>\r\n            <label htmlFor=\"provider_name\" className={'resource-create-title'}>Поставщик</label>\r\n            {error && error.provider_name ? <div>Некоректное значение</div> : null}\r\n            <input type=\"text\" name=\"provider_name\" id=\"provider_name\"\r\n                   className={'create-resource-input'}\r\n                   onChange={e => setProviderName(e.target.value)}\r\n                   value={provider_name}/>\r\n            <label htmlFor=\"cost\" className={'resource-create-title'}>Цена поставки</label>\r\n            {error && error.cost ? <div>Некоректное значение</div> : null}\r\n            <input type=\"number\" step=\"0.01\" name=\"cost\" id=\"cost\"\r\n                   className={'create-resource-input'}\r\n                   onChange={e => setCost(parseFloat(e.target.value))}\r\n                   value={cost}/>\r\n            <label htmlFor=\"amount\" className={'resource-create-title'}>Количество в поставке</label>\r\n            {error && error.amount ? <div>Некоректное значение</div> : null}\r\n            <input type=\"number\" step=\"0.01\" name=\"amount\" id=\"amount\"\r\n                   className={'create-resource-input'}\r\n                   onChange={e => setAmount(parseFloat(e.target.value))}\r\n                   value={amount}/>\r\n            <label htmlFor=\"comment\" className={'resource-create-title'}>Комментарий</label>\r\n            <input type=\"text\" name={'comment'} id={'comment'}\r\n                   className={'create-resource-input'}\r\n                   onChange={e => setComment(e.target.value)}\r\n                   value={comment}/>\r\n            <label htmlFor=\"time_stamp\" className={'resource-create-title'}>Дата поставки</label>\r\n            <input type=\"text\" name={'time_stamp'} id={'time_stamp'}\r\n                   className={'create-resource-input'}\r\n                   onChange={e => setTimeStamp(e.target.value)}\r\n                   value={timeStamp}/>\r\n          </div>\r\n          {loading ? <Loader/> : <button className={'filter-btn'} type={'submit'}>Применить</button>}\r\n        </form>\r\n      </div>\r\n  )\r\n}\r\n\r\nexport default CollectResourceModal","D:\\smola-frontend\\src\\components\\order-card-specification-item\\specification-item\\index.js",["526","527"],"import React, {useState} from \"react\";\r\nimport axiosAPI from \"../../api/axiosApi\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {listOrders} from \"../../../actions/order-list-actions\";\r\n\r\nimport './specification-item.scss'\r\n\r\nexport const OrderSpecificationItem = ({orderId, orderSpec, active, background, reload}) => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const assemble = () => {\r\n        axiosAPI.post('order/assemble-specification/',\r\n            {\r\n                'order_id': orderId,\r\n                'specification_id': orderSpec.specification.id\r\n            })\r\n            .then(response => {\r\n                reload()\r\n                dispatch(listOrders())\r\n            })\r\n            .catch(error => {\r\n\r\n            })\r\n    }\r\n\r\n    return (\r\n        <div className={background ? 'order-card-resources-wrapper active' : 'order-card-resources-wrapper'}>\r\n            <div className={'order-resource-id'}>{orderSpec.specification.id}</div>\r\n            <div className={'order-resource-name'}>{orderSpec.specification.name}</div>\r\n            <div className={'order-resource-amount'}>{orderSpec.amount}</div>\r\n        </div>)\r\n}","D:\\smola-frontend\\src\\screens\\profile-screen\\admin-panel\\list-user\\index.js",["528","529"],"import {useDispatch, useSelector} from \"react-redux\";\r\nimport {useEffect} from \"react\";\r\nimport {profileAdminListAction} from \"../../../../actions/profile-admin-list\";\r\nimport ProfileAdminCard from \"./card\";\r\n\r\nconst ProfileAdminList = () => {\r\n    const dispatch = useDispatch()\r\n    const profileList = useSelector(state => state.profileAdminList)\r\n    const {error, loading, profileAdminList} = profileList\r\n\r\n\r\n    useEffect(() => {\r\n        dispatch(profileAdminListAction())\r\n    }, [dispatch])\r\n\r\n    console.log(\"profiles\")\r\n    console.log({profileAdminList})\r\n    return (\r\n        <div>{\r\n            profileAdminList !== undefined ?\r\n                <div>\r\n                    {\r\n                        Object.values(profileAdminList).map(profile => {\r\n                            console.log(\"profiles: \" + profileAdminList);\r\n                            return <ProfileAdminCard profile={profile}/>\r\n                    })}\r\n                </div>\r\n                : null}\r\n\r\n        </div>\r\n    )\r\n}\r\nexport default ProfileAdminList;","D:\\smola-frontend\\src\\screens\\profile-screen\\admin-panel\\create-user\\index.js",["530","531","532","533"],"import {useDispatch} from \"react-redux\";\r\nimport React, {useState} from \"react\";\r\nimport {createProfileAction} from \"../../../../actions/profile-create-actions\";\r\n\r\nimport './create-user.scss'\r\nimport axiosAPI from \"../../../../components/api/axiosApi\";\r\nimport {profileAdminListAction} from \"../../../../actions/profile-admin-list\";\r\n\r\nconst reg = /^([A-Za-z0-9_\\-\\.])+\\@([A-Za-z0-9_\\-\\.])+\\.([A-Za-z]{2,4})$/;\r\nconst AddUser = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    const [role, setRole] = useState(\"20\");\r\n    const [email, setEmail] = useState(\"\")\r\n    const [errorMessage, setErrorMessage] = useState(\"\")\r\n\r\n    const submitHandler = e => {\r\n        e.preventDefault();\r\n        if (reg.test(email) === false){\r\n            setErrorMessage(\"Неверная почта\")\r\n            return\r\n        }\r\n        axiosAPI.post('authenticate/user/create/',\r\n            {\r\n                'role': role,\r\n                'email': email\r\n            }\r\n        )\r\n            .then(response => {\r\n                reloadData()\r\n                dispatch(profileAdminListAction())\r\n                setErrorMessage(\"\")\r\n                }\r\n            )\r\n            .catch(error => {\r\n                if (error.response && error.response.data){\r\n                    if (error.response.data.email)\r\n                    setErrorMessage(error.response.data.email)\r\n                }\r\n            })\r\n    }\r\n\r\n    const reloadData = () => {\r\n        setRole(\"20\")\r\n        setEmail(\"\")\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <div className={'create-user-title'}>\r\n                Создание нового пользователя\r\n            </div>\r\n            <form onClick={e => e.stopPropagation()} onSubmit={submitHandler}>\r\n                {errorMessage ? <div>{errorMessage}</div> : null}\r\n               <div className=\"create-user-wrapper\">\r\n                  <div>\r\n                    <select onChange={e => setRole(e.target.value)} value={role}>\r\n                      <option value=\"30\" key={\"30\"}>Офисный работник</option>\r\n                      <option value=\"20\" key={\"20\"}>Работник склада</option>\r\n                    </select>\r\n                  </div>\r\n                  <div className={'create-user-input'}>\r\n                    <label htmlFor=\"currentPassword\" className={'create-user-email'}>Email</label>\r\n                    <input id={\"currentPassword\"} type=\"email\" value={email}\r\n                           onChange={e => setEmail(e.target.value)}/>\r\n                  </div>\r\n               </div>\r\n                <button type={\"submit\"} className={'create-btn'}>Создать</button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddUser;","D:\\smola-frontend\\src\\actions\\profile-admin-list.js",[],"D:\\smola-frontend\\src\\actions\\profile-create-actions.js",[],["534","535"],"D:\\smola-frontend\\src\\screens\\profile-screen\\admin-panel\\list-user\\card.js",[],{"ruleId":"536","replacedBy":"537"},{"ruleId":"538","replacedBy":"539"},{"ruleId":"540","severity":1,"message":"541","line":18,"column":12,"nodeType":"542","messageId":"543","endLine":18,"endColumn":17},{"ruleId":"540","severity":1,"message":"544","line":18,"column":28,"nodeType":"542","messageId":"543","endLine":18,"endColumn":32},{"ruleId":"540","severity":1,"message":"545","line":19,"column":11,"nodeType":"542","messageId":"543","endLine":19,"endColumn":18},{"ruleId":"540","severity":1,"message":"546","line":5,"column":5,"nodeType":"542","messageId":"543","endLine":5,"endColumn":19},{"ruleId":"540","severity":1,"message":"545","line":14,"column":11,"nodeType":"542","messageId":"543","endLine":14,"endColumn":18},{"ruleId":"547","severity":1,"message":"548","line":1,"column":1,"nodeType":"549","endLine":3,"endColumn":3},{"ruleId":"540","severity":1,"message":"550","line":20,"column":66,"nodeType":"542","messageId":"543","endLine":20,"endColumn":77},{"ruleId":"551","severity":1,"message":"552","line":32,"column":5,"nodeType":"542","endLine":32,"endColumn":14,"suggestions":"553"},{"ruleId":"540","severity":1,"message":"554","line":9,"column":9,"nodeType":"542","messageId":"543","endLine":9,"endColumn":29},{"ruleId":"540","severity":1,"message":"555","line":1,"column":27,"nodeType":"542","messageId":"543","endLine":1,"endColumn":35},{"ruleId":"540","severity":1,"message":"556","line":14,"column":23,"nodeType":"542","messageId":"543","endLine":14,"endColumn":35},{"ruleId":"551","severity":1,"message":"557","line":30,"column":8,"nodeType":"558","endLine":30,"endColumn":15,"suggestions":"559"},{"ruleId":"560","severity":1,"message":"561","line":61,"column":37,"nodeType":"562","endLine":61,"endColumn":102},{"ruleId":"551","severity":1,"message":"563","line":41,"column":6,"nodeType":"558","endLine":41,"endColumn":50,"suggestions":"564"},{"ruleId":"540","severity":1,"message":"555","line":1,"column":16,"nodeType":"542","messageId":"543","endLine":1,"endColumn":24},{"ruleId":"540","severity":1,"message":"565","line":2,"column":9,"nodeType":"542","messageId":"543","endLine":2,"endColumn":13},{"ruleId":"566","severity":1,"message":"567","line":9,"column":9,"nodeType":"568","messageId":"569","endLine":24,"endColumn":10},{"ruleId":"540","severity":1,"message":"541","line":12,"column":12,"nodeType":"542","messageId":"543","endLine":12,"endColumn":17},{"ruleId":"540","severity":1,"message":"570","line":12,"column":19,"nodeType":"542","messageId":"543","endLine":12,"endColumn":26},{"ruleId":"540","severity":1,"message":"571","line":4,"column":22,"nodeType":"542","messageId":"543","endLine":4,"endColumn":33},{"ruleId":"540","severity":1,"message":"572","line":3,"column":9,"nodeType":"542","messageId":"543","endLine":3,"endColumn":26},{"ruleId":"540","severity":1,"message":"573","line":8,"column":9,"nodeType":"542","messageId":"543","endLine":8,"endColumn":21},{"ruleId":"540","severity":1,"message":"574","line":13,"column":9,"nodeType":"542","messageId":"543","endLine":13,"endColumn":17},{"ruleId":"540","severity":1,"message":"570","line":18,"column":10,"nodeType":"542","messageId":"543","endLine":18,"endColumn":17},{"ruleId":"540","severity":1,"message":"541","line":19,"column":10,"nodeType":"542","messageId":"543","endLine":19,"endColumn":15},{"ruleId":"560","severity":1,"message":"561","line":70,"column":15,"nodeType":"562","endLine":70,"endColumn":80},{"ruleId":"540","severity":1,"message":"575","line":1,"column":9,"nodeType":"542","messageId":"543","endLine":1,"endColumn":20},{"ruleId":"540","severity":1,"message":"576","line":2,"column":9,"nodeType":"542","messageId":"543","endLine":2,"endColumn":29},{"ruleId":"540","severity":1,"message":"577","line":1,"column":16,"nodeType":"542","messageId":"543","endLine":1,"endColumn":25},{"ruleId":"540","severity":1,"message":"555","line":1,"column":16,"nodeType":"542","messageId":"543","endLine":1,"endColumn":24},{"ruleId":"578","severity":1,"message":"579","line":9,"column":42,"nodeType":"580","messageId":"581","endLine":9,"endColumn":44},{"ruleId":"551","severity":1,"message":"582","line":13,"column":26,"nodeType":"583","endLine":13,"endColumn":87},{"ruleId":"540","severity":1,"message":"577","line":1,"column":16,"nodeType":"542","messageId":"543","endLine":1,"endColumn":25},{"ruleId":"540","severity":1,"message":"555","line":1,"column":27,"nodeType":"542","messageId":"543","endLine":1,"endColumn":35},{"ruleId":"578","severity":1,"message":"579","line":15,"column":51,"nodeType":"580","messageId":"581","endLine":15,"endColumn":53},{"ruleId":"578","severity":1,"message":"584","line":16,"column":60,"nodeType":"580","messageId":"585","endLine":16,"endColumn":62},{"ruleId":"578","severity":1,"message":"579","line":20,"column":9,"nodeType":"586","messageId":"587","endLine":20,"endColumn":15},{"ruleId":"540","severity":1,"message":"588","line":12,"column":16,"nodeType":"542","messageId":"543","endLine":12,"endColumn":24},{"ruleId":"540","severity":1,"message":"588","line":12,"column":18,"nodeType":"542","messageId":"543","endLine":12,"endColumn":26},{"ruleId":"540","severity":1,"message":"571","line":4,"column":22,"nodeType":"542","messageId":"543","endLine":4,"endColumn":33},{"ruleId":"540","severity":1,"message":"571","line":4,"column":22,"nodeType":"542","messageId":"543","endLine":4,"endColumn":33},{"ruleId":"540","severity":1,"message":"555","line":1,"column":16,"nodeType":"542","messageId":"543","endLine":1,"endColumn":24},{"ruleId":"540","severity":1,"message":"589","line":12,"column":11,"nodeType":"542","messageId":"543","endLine":12,"endColumn":19},{"ruleId":"540","severity":1,"message":"541","line":9,"column":12,"nodeType":"542","messageId":"543","endLine":9,"endColumn":17},{"ruleId":"540","severity":1,"message":"570","line":9,"column":19,"nodeType":"542","messageId":"543","endLine":9,"endColumn":26},{"ruleId":"540","severity":1,"message":"590","line":3,"column":9,"nodeType":"542","messageId":"543","endLine":3,"endColumn":28},{"ruleId":"591","severity":1,"message":"592","line":9,"column":29,"nodeType":"593","messageId":"594","endLine":9,"endColumn":30,"suggestions":"595"},{"ruleId":"591","severity":1,"message":"596","line":9,"column":34,"nodeType":"593","messageId":"594","endLine":9,"endColumn":35,"suggestions":"597"},{"ruleId":"591","severity":1,"message":"592","line":9,"column":50,"nodeType":"593","messageId":"594","endLine":9,"endColumn":51,"suggestions":"598"},{"ruleId":"536","replacedBy":"599"},{"ruleId":"538","replacedBy":"600"},"no-native-reassign",["601"],"no-negated-in-lhs",["602"],"no-unused-vars","'error' is assigned a value but never used.","Identifier","unusedVar","'data' is assigned a value but never used.","'history' is assigned a value but never used.","'REMOVE_PRODUCT' is defined but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'profilePage' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect contains a call to 'setSearchString'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [specificationPage, resourcePage, orderPage, searchSpecification, searchResource, searchOrder] as a second argument to the useEffect Hook.",["603"],"'switchMainPageAction' is defined but never used.","'useState' is defined but never used.","'setDirection' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'reloadCard'. Either include it or remove the dependency array.","ArrayExpression",["604"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","React Hook useEffect has missing dependencies: 'filterOrder', 'filterResource', and 'filterSpecification'. Either include them or remove the dependency array.",["605"],"'Link' is defined but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'loading' is assigned a value but never used.","'useSelector' is defined but never used.","'createOrderAction' is defined but never used.","'listProducts' is defined but never used.","'dispatch' is assigned a value but never used.","'useDispatch' is defined but never used.","'changePasswordAction' is defined but never used.","'useEffect' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","Assignments to the 'background' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","UnaryExpression","Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd","ReturnStatement","expectedReturnValue","'setIndex' is assigned a value but never used.","'assemble' is assigned a value but never used.","'createProfileAction' is defined but never used.","no-useless-escape","Unnecessary escape character: \\..","Literal","unnecessaryEscape",["606","607"],"Unnecessary escape character: \\@.",["608","609"],["610","611"],["601"],["602"],"no-global-assign","no-unsafe-negation",{"desc":"612","fix":"613"},{"desc":"614","fix":"615"},{"desc":"616","fix":"617"},{"messageId":"618","fix":"619","desc":"620"},{"messageId":"621","fix":"622","desc":"623"},{"messageId":"618","fix":"624","desc":"620"},{"messageId":"621","fix":"625","desc":"623"},{"messageId":"618","fix":"626","desc":"620"},{"messageId":"621","fix":"627","desc":"623"},"Add dependencies array: [specificationPage, resourcePage, orderPage, searchSpecification, searchResource, searchOrder]",{"range":"628","text":"629"},"Update the dependencies array to be: [order, reloadCard]",{"range":"630","text":"631"},"Update the dependencies array to be: [specificationPage, resourcePage, orderPage, filterSpecification, filterResource, filterOrder]",{"range":"632","text":"633"},"removeEscape",{"range":"634","text":"635"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"636","text":"637"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"638","text":"635"},{"range":"639","text":"637"},{"range":"640","text":"635"},{"range":"641","text":"637"},[1927,1927],", [specificationPage, resourcePage, orderPage, searchSpecification, searchResource, searchOrder]",[967,974],"[order, reloadCard]",[1730,1774],"[specificationPage, resourcePage, orderPage, filterSpecification, filterResource, filterOrder]",[365,366],"",[365,365],"\\",[370,371],[370,370],[386,387],[386,386]]